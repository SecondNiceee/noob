{"version":3,"file":"static/js/496.24ac8b8e.chunk.js","mappings":"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","sources":["webpack://new-react/./src/components/UI/FullPicker/FullPicker.module.css?517e","components/UI/FullPicker/FullPicker.jsx","functions/breakShare.js","pages/MyAds/components/Reaction.jsx","webpack://new-react/./src/components/SavedPage/Choicer/Choicer.module.css?5399","components/SavedPage/Choicer/ChoicerInfo.jsx","components/SavedPage/Choicer/Choicer.jsx","webpack://new-react/./src/components/SavedPage/SavedReponse/SavedResponse.module.css?1245","components/SavedPage/SavedReponse/SavedResponse.jsx","webpack://new-react/./src/components/SavedPage/SavedProfile/SavedProfile.module.css?ca0e","components/SavedPage/SavedProfile/SavedProfile.jsx","pages/SavedPage/SavedPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"track\":\"FullPicker_track__EI4Sn\",\"value\":\"FullPicker_value__kTGP0\",\"loup\":\"FullPicker_loup__4ceTf\",\"bigValue\":\"FullPicker_bigValue__9tveS\",\"greyBlock\":\"FullPicker_greyBlock__Glett\"};","import React, { memo, useMemo } from \"react\";\r\nimport cl from \"./FullPicker.module.css\";\r\nconst FullPicker = ({\r\n  values,\r\n  keys,\r\n  nowKey,\r\n  setNowKey,\r\n  className,\r\n  GreyIntWidth,\r\n  GreyWidth,\r\n}) => {\r\n  const myTransform = useMemo(() => {\r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (nowKey === keys[0]) {\r\n        return \"translateX(2px)\";\r\n      }\r\n      if (nowKey === keys[i]) {\r\n        return \"translateX(\" + (GreyIntWidth * i + 2).toString() + \"px)\";\r\n      }\r\n    }\r\n  }, [nowKey, GreyIntWidth, keys]);\r\n  return (\r\n    <div className={className ? [cl.track, className].join(\" \") : cl.track}>\r\n      <div\r\n        style={{ width: GreyWidth, transform: myTransform }}\r\n        className={cl.greyBlock}\r\n      ></div>\r\n\r\n      {keys.map((e, i) => {\r\n        return (\r\n          <>\r\n            {nowKey === keys[i] ? (\r\n              <p key={i}\r\n                className={cl.bigValue}\r\n                onClick={(e) => {\r\n                  setNowKey(keys[i]);\r\n                }}\r\n              >\r\n                {values[i]}\r\n              </p>\r\n            ) : (\r\n              <p key={i}\r\n                className={cl.value}\r\n                onClick={(e) => {\r\n                  setNowKey(keys[i]);\r\n                }}\r\n              >\r\n                {values[i]}\r\n              </p>\r\n            )}\r\n            <div className={cl.loup} style={i === keys.length - 1 ? {display : \"none\"} : {}}></div>\r\n\r\n          </>\r\n        )\r\n      })}\r\n\r\n\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(FullPicker);\r\n","function breakShare(){\r\n    window.Telegram.WebApp.showAlert(\"Мы пока не добавили возможность делиться откликами:(\")\r\n}\r\nexport default breakShare","import React, { memo } from \"react\";\r\n\r\nimport share from \"../../../images/icons/Share.svg\";\r\n\r\nimport \"./../MyAds.css\";\r\nimport FalseTie from \"../../../components/UI/FalseTie/FalseTie\";\r\nimport MyButton from \"../../../components/UI/MyButton/MyButton\";\r\nimport userPhoto from \"../../../images/userPhoto/user.png\"\r\nimport breakShare from \"../../../functions/breakShare\";\r\nconst Reaction = ({\r\n  blue = false,\r\n  setOpen,\r\n  put,\r\n  openAboutReactionFunc,\r\n  responce,\r\n  writeButton = true,\r\n  agree = false,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"reaction\"\r\n        style={\r\n          responce.isWatched === \"inProcess\" && writeButton\r\n            ? { border: \"1.67px solid #2ea5ff\" }\r\n            : {}\r\n        }\r\n      >\r\n        {responce.photos.length > 0 ? (\r\n          <div className=\"reactions__images\">\r\n            {responce.photos.map((e, i) => (\r\n              <img\r\n                style={responce.photos.length === 1 ? { width: \"100%\" } : {}}\r\n                src={URL.createObjectURL(e)}\r\n                alt=\"\"\r\n                key={i}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <div className=\"reaction__middle\">\r\n          <img\r\n            style={{objectFit : \"cover\"}}\r\n            onClick={() => {\r\n              openAboutReactionFunc({ isActive: true, responce: responce });\r\n            }}\r\n            className=\"icon\"\r\n            src={responce.user.photo.length > 0 ? responce.user.photo : userPhoto}\r\n            alt=\"\"\r\n          />\r\n          <div\r\n            onClick={() => {\r\n              openAboutReactionFunc({ isActive: true, responce: responce });\r\n            }}\r\n            className=\"reaction__middle-midle\"\r\n          >\r\n            <p\r\n              className=\"reaction__userName\"\r\n              style={\r\n                blue\r\n                  ? {\r\n                      textDecoration: \"underline\",\r\n                      color: \"#2ea5ff\",\r\n                      textUnderlineOffset: \"2px\",\r\n                    }\r\n                  : {}\r\n              }\r\n            >\r\n              {responce.user.fl}\r\n            </p>\r\n            <div className=\"reaction__rates\">\r\n              {/* <img src={star} alt=\"\" /> */}\r\n              <div className=\"rates__text\">\r\n                {/* <p><span>4</span></p>\r\n                                  <p>◦</p>\r\n                                  <p>158 отзывов</p>\r\n                                  <p>◦</p> */}\r\n                <p>\r\n                  Стаж{\" \"}\r\n                  {responce.user.stage === null ? \"0\" : responce.user.stage} лет\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          { (responce.isWatched === \"inProcess\" && writeButton) &&           <div className=\"blue-circle\">\r\n            <svg\r\n            className=\"commit-icon\"\r\n              width=\"16\"\r\n              height=\"15\"\r\n              viewBox=\"0 0 16 15\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M1.21484 8.14672L3.67722 10.4449L10.141 4.41211M14.4501 4.55575L7.98639 10.5886L7.2169 9.87039\"\r\n                stroke=\"#2EA5FF\"\r\n                stroke-width=\"1.33333\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n              />\r\n            </svg>\r\n          </div>}\r\n\r\n\r\n          {put ? (\r\n            <div className=\"right\">\r\n\r\n              <MyButton\r\n                style = {writeButton ? {} : {display : \"none\"}}\r\n                onClick={() => {\r\n                  window.Telegram.WebApp.openTelegramLink(\r\n                    \"https://t.me/\" + responce.user.link\r\n                  );\r\n                }}\r\n              >\r\n                Написать\r\n              </MyButton>\r\n\r\n              <FalseTie\r\n                agree={agree}\r\n                navigate={\"responce\"}\r\n                task={responce}\r\n                id={responce.id}\r\n              />\r\n              <div className=\"circle\" onClick={breakShare}  style={{opacity : 0.5}}>\r\n                <img className=\"shareImage\" src={share} alt=\"\" />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div onClick={breakShare}  className=\"circle\" style={responce.isWatched === \"inProcess\" && writeButton ? {marginLeft : \"8px\" , opacity : 0.5} : {opacity : 0.5}}>\r\n              <img  className=\"shareImage\" src={share} alt=\"\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n        {put ? (\r\n          <div\r\n            style={{\r\n              marginBottom: \"18px\",\r\n            }}\r\n          ></div>\r\n        ) : (\r\n          <div className=\"reactions__bottom\">\r\n            <button\r\n              onClick={() => {\r\n                setOpen({\r\n                  isActive: true,\r\n                  responce: responce,\r\n                });\r\n              }}\r\n              className=\"bottom__one\"\r\n            >\r\n              подробнее\r\n            </button>\r\n            <button\r\n              className=\"bottom__two\"\r\n              onClick={() => {\r\n                window.Telegram.WebApp.openTelegramLink(\r\n                  \"https://t.me/\" + responce.user.link\r\n                );\r\n              }}\r\n            >\r\n              Написать\r\n            </button>\r\n            {/* <svg style={{\r\n                stroke-width : \"1.67px\",\r\n                stroke : \"#2ea5ff\"\r\n              }} width=\"18\" height=\"21\" viewBox=\"0 0 18 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path d=\"M14.0978 1.80176C15.8171 1.80176 16.247 3.18964 16.247 3.88358V19.2571C16.247 20.2179 15.4204 19.8976 14.0978 19.2571L9.46867 17.1752C9.46867 17.1752 9.08075 17.0151 8.64205 17.0151C8.20335 17.0151 7.81542 17.1752 7.81542 17.1752L3.18633 19.2571C1.86373 19.8976 1.03711 20.2179 1.03711 19.2571V3.88358C1.03711 2.21812 2.46992 1.80176 3.18633 1.80176H14.0978Z\" stroke=\"#2EA5FF\" stroke-width=\"1.66667\" />\r\n</svg> */}\r\n            <FalseTie\r\n              agree={agree}\r\n              navigate={\"responce\"}\r\n              task={responce}\r\n              id={responce.id}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(Reaction);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Choicer_main__HJJs8\",\"choicerBlock\":\"Choicer_choicerBlock__E+skE\",\"text\":\"Choicer_text__-iwdZ\",\"firstBlock\":\"Choicer_firstBlock__BVOD8\",\"blocksWrapper\":\"Choicer_blocksWrapper__8D0ia\"};","import React, { memo, useCallback, useMemo } from 'react';\r\nimport  { useLottie } from \"lottie-react\";\r\nimport sleeping from \"../../../animation/tired.json\";\r\nimport cl from \"./Choicer.module.css\"\r\nimport FirstBlock from '../../First/FirstMain/FirstBlock';\r\nimport Reaction from '../../../pages/MyAds/components/Reaction';\r\nimport Case from '../../UI/Case/Case';\r\n\r\nconst ChoicerInfo = ({text , arr, navigate ,setDetails , setResponce, setCard}) => {\r\n    const options = {\r\n        animationData: sleeping,\r\n        loop: true,\r\n        style : {\r\n\r\n            display : \"flex\",\r\n            justifyContent : \"center\",\r\n            marginLeft : \"auto\",\r\n            marginRight : \"auto\",\r\n            width : \"250px\"\r\n        }\r\n        \r\n      };\r\n\r\n      const openFunc = useCallback( (card) => {\r\n        setCard({isOpen : true , card : card})\r\n      } , [setCard] )\r\n\r\n      const { View } = useLottie(options)\r\n      ;\r\n\r\n      const array = useMemo(() => {\r\n        if (navigate === 'task'){\r\n            return arr.map((e,i) => {\r\n                return <FirstBlock index={i} setDetailsActive={setDetails} agree ={true} isButton={true} className={cl.firstBlock}  task={e} id={e.id}  {...e} />\r\n             }) \r\n        }\r\n        if (navigate === 'response'){\r\n            return arr.map((e,i) => {\r\n                return <Reaction  setOpen={setResponce} agree = {true} responce={e} />\r\n             }) \r\n        }\r\n        if (navigate === 'card')\r\n            return arr.map((e,i) => {\r\n                return <Case  card={e} openFunc={openFunc}  agree = {true} task={e} title={e.title} description={e.description} photos={e.photos} watchOnly={true} />\r\n             }) \r\n        \r\n      } , [arr, navigate, openFunc, setDetails, setResponce])\r\n\r\n      \r\n    return (\r\n   <>\r\n        \r\n            <div style={arr.length > 0 ? {display : 'none'} : {}} className={cl.choicerBlock}>\r\n            <div onClick={() => {\r\n                window.Telegram.WebApp.openTelegramLink(\"https://t.me/addstickers/DonutTheDog\")\r\n            }} className='hamster'>{View}</div>\r\n            <p className={cl.text}>{text}</p>\r\n            </div>\r\n        \r\n        <div style={arr.length === 0 ? {display : 'none'} : {}} className={cl.blocksWrapper}>\r\n            \r\n        {array}\r\n        </div>\r\n        \r\n</>\r\n\r\n    );\r\n};\r\n\r\nexport default memo(ChoicerInfo);","import React, { memo, useMemo } from 'react';\r\nimport cl from './Choicer.module.css'\r\n\r\nimport ChoicerInfo from './ChoicerInfo';\r\nimport { useSelector } from 'react-redux';\r\nconst Choicer = ({nowKey , keys, setDetails, setResponce, setCard}) => {\r\n\r\n    const savedTasks = useSelector(state => state.saves.tasks)\r\n    const savedResponces = useSelector(state => state.saves.responces)\r\n    const savedCards = useSelector(state => state.saves.cards)\r\n\r\n    const style = useMemo( () => {\r\n        switch (nowKey){\r\n            case keys[0]:\r\n                return {\r\n                    transform : \"translateX(0%)\"\r\n                }\r\n            case keys[1]:\r\n                return {\r\n                    transform : \"translateX(-100vw)\"\r\n                }\r\n            case keys[2]:\r\n                return {\r\n                    transform : \"translateX(-200vw)\"\r\n                }\r\n            default : \r\n                return {\r\n                     transform : \"translateX(0%)\"\r\n                }\r\n        }\r\n    } , [keys, nowKey])\r\n    return (\r\n        <div style={style} className={cl.main}>\r\n                <ChoicerInfo setDetails = {setDetails} navigate={\"task\"} arr={savedTasks} text = {\"У вас нет сохраненных заказов\"}  />\r\n                <ChoicerInfo setResponce = {setResponce} navigate={\"response\"} arr={savedResponces} text = {\"У вас нет сохраненных откликов\"} />\r\n                <ChoicerInfo setCard = {setCard} navigate={\"card\"} arr={savedCards} text = {\"У вас нет сохраненных кейсов\"} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(Choicer);","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SavedResponse_wrapper__fbQtX\"};","import React, { memo, useCallback } from 'react';\r\nimport cl from './SavedResponse.module.css'\r\nimport FirstBlock from '../../First/FirstMain/FirstBlock';\r\nimport Reaction from '../../../pages/MyAds/components/Reaction';\r\nimport TextAboutMe from '../../UI/AboutMeText/TextAboutMe';\r\nimport formatDate from '../../../functions/makeDate';\r\nconst SavedResponse = ({ response, setProfileOpen, setDetails}) => {\r\n    const openAboutReactionFunc = useCallback( () => {\r\n        setProfileOpen(true)\r\n    }  , [ setProfileOpen])\r\n    return (\r\n        <div className={cl.wrapper}>\r\n            <FirstBlock isButton={true} index={99} setDetailsActive={setDetails} task={response.advertisement}  {...response.advertisement} />\r\n            <Reaction openAboutReactionFunc={openAboutReactionFunc} blue = {true}  put={true} responce={response} />\r\n            <TextAboutMe textareaClassName={\"new-textarea\"}  aboutU={response.information} />\r\n      <p style={{marginTop : \"0px\"}} className=\"creationTime\">{ \"Создано \" + formatDate(new Date(response.createdAt))}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(SavedResponse);","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SavedProfile_wrapper__9j3b2\"};","import React, { memo, useEffect, useState } from 'react';\r\nimport cl from './SavedProfile.module.css'\r\nimport AboutInfo from '../../../pages/MyAds/components/AboutInfo';\r\nimport AboutMain from '../../../pages/MyAds/components/AboutMain';\r\nimport Compact from '../../UI/Compact/Compact';\r\nimport Stage from '../../UI/Stage/Stage';\r\nimport MyLoader from '../../UI/MyLoader/MyLoader';\r\nimport ExampleWorks from '../../../pages/MyAds/components/ExampleWorks';\r\nimport makeNewFile from '../../../functions/newMakeFile';\r\nimport AboutTop from '../../../pages/MyAds/components/AboutTop';\r\nimport axios from 'axios';\r\nconst SavedProfile = ({responce, openFunc}) => {\r\n\r\n\r\n    const [cards , setCards] = useState(null)\r\n    useEffect( () => {\r\n      async function getAllCards(){\r\n        let localCards = []\r\n        try{\r\n  \r\n          let allCards = await axios.get(\"https://back-birga.ywa.su/card/findByUser\" , {\r\n              params : {\r\n                  userId : responce.user.id\r\n              }\r\n          })\r\n  \r\n          \r\n          for (let e of allCards.data){\r\n  \r\n            let files = await makeNewFile(e.folder , e.photos)\r\n            localCards.push({\r\n                id : e.id,\r\n                title : e.title,\r\n                description : e.description,\r\n                behanceLink : e.behance,\r\n                dribbbleLink : e.dribble,\r\n                dropfileLink : e.dropFile,\r\n                photosNames : e.photos,\r\n                photos : files\r\n            })\r\n          }\r\n      \r\n        return localCards\r\n  \r\n  \r\n        }\r\n        catch(e){\r\n          window.Telegram.WebApp.showAlert(e)\r\n          console.log(e)\r\n        }\r\n  \r\n  \r\n  \r\n      }\r\n      getAllCards().then((value) => {\r\n        setCards(value)\r\n      })\r\n      // eslint-disable-next-line\r\n    } , [])\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={cl.wrapper}>\r\n            <AboutTop responce={responce} />\r\n            <AboutInfo responce={responce} />\r\n            <AboutMain aboutU = {responce.user.about}  />\r\n            <Compact className={\"stage-compact\"} title = {\"Стаж работы\"}>\r\n                        <Stage number={responce.user.stage} />\r\n            </Compact>\r\n            {cards === null ? <MyLoader/> :\r\n      <ExampleWorks openFunc = {openFunc} cards={cards}/>}\r\n    \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(SavedProfile);","import React, { memo, useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport Top from \"../../components/UI/Top/Top\";\r\nimport useListner from \"../../hooks/useListner\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeMenuActive } from \"../../store/menuSlice\";\r\nimport FullPicker from \"../../components/UI/FullPicker/FullPicker\";\r\nimport Choicer from \"../../components/SavedPage/Choicer/Choicer\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport FirstDetails from \"../../components/First/FirstDetails/FirstDetails\";\r\nimport Responce from \"../First/Responce\";\r\nimport MainButton from \"../../constants/MainButton\";\r\nimport BackButton from \"../../constants/BackButton\";\r\nimport axios from \"axios\";\r\nimport { addResponce } from \"../../store/information\";\r\nimport pagesHistory from \"../../constants/pagesHistory\";\r\nimport SavedResponse from \"../../components/SavedPage/SavedReponse/SavedResponse\";\r\nimport SavedProfile from \"../../components/SavedPage/SavedProfile/SavedProfile\";\r\nimport CardPage from \"../CardPage/CardPage\";\r\nimport AboutReaction from \"../MyAds/components/AboutReaction\";\r\n\r\nconst values = [\"Заказы\", \"Отклики\", \"Кейсы\"];\r\nconst keys = [\"advertisment\", \"responces\", \"cards\"];\r\nconst SavedPage = () => {\r\n\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      pagesHistory.push(\"/SavedPage\");\r\n    };\r\n  }, []);\r\n\r\n  const [card, setCard] = useState({\r\n    isOpen: false,\r\n    card: {\r\n      behanceLink : \"\",\r\n      description : \"\",\r\n      dribbbleLink : \"\",\r\n      id : 0,\r\n      photos : [],\r\n      photosNames : [],\r\n      title : \"\"\r\n    },\r\n  });\r\n\r\n  const [myResponse, setMyResponse] = useState({\r\n    responce: {},\r\n    isActive: false,\r\n  });\r\n\r\n  const [responce, setResponce] = useState({\r\n    isOpen: false,\r\n    text: \"\",\r\n    photos: [],\r\n    name: \"привет\",\r\n    isShablonModalActive: false,\r\n    shablonIndex: 0,\r\n    isShablon: false,\r\n    shablonMaker: false,\r\n  });\r\n\r\n  const isMenuActive = useSelector((state) => state.menu.value);\r\n  const dispatch = useDispatch();\r\n  const [nowKey, setNowKey] = useState(\"advertisment\");\r\n\r\n  const [isProfileOpen , setProfileOpen] = useState(false)\r\n\r\n  const [isProfile , setProfile] = useState(false)\r\n\r\n  const GreyIntWidth = useMemo(() => {\r\n    return (document.documentElement.clientWidth - 36) / 3;\r\n  }, []);\r\n  const GreyWidth = useMemo(() => {\r\n    return GreyIntWidth.toString() + \"px\";\r\n  }, [GreyIntWidth]);\r\n\r\n  const [details, setDetails] = useState({\r\n    isOpen: false,\r\n    id: 0,\r\n  });\r\n  const [extraDetails, setExtraDetails] = useState({\r\n    isOpen : false,\r\n    id : 0\r\n    })\r\n  const setMenuActive = useCallback(\r\n    (set) => {\r\n      dispatch(changeMenuActive(set));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const savedTasks = useSelector((state) => state.saves.tasks);\r\n\r\n  const gotIt = useMemo(() => {\r\n    if (\r\n      savedTasks !== null &&\r\n      savedTasks.length > 0 &&\r\n      savedTasks[details.id]\r\n    ) {\r\n      if (savedTasks[details.id].responces) {\r\n        // if (savedTasks[details.id].responces.find(e => e.user.id === \"2144832745\")){\r\n        //   return true\r\n        // }\r\n        // else{\r\n        //   return false\r\n        // }\r\n      }\r\n    }\r\n    return false;\r\n  }, [savedTasks, details.id]);\r\n\r\n  useEffect(() => {\r\n    // setStep(varStep)\r\n    // setDetailsActive({...isDetailsActive , isOpen : isDetailsActiveVar})\r\n    if (details.isOpen) {\r\n      BackButton.show();\r\n    }\r\n  }, [details.isOpen]);\r\n\r\n  useEffect(() => {\r\n    function forward() {\r\n      if (gotIt) {\r\n        window.Telegram.WebApp.showPopup({\r\n          title: \"Ошибка\",\r\n          message:\r\n            \"Вы уже откликнулись на это задание. Заказчик обязательно увидит ваш отклик.\",\r\n        });\r\n      } else {\r\n        if (!responce.isOpen) {\r\n          setResponce((value) => ({ ...value, isOpen: true }));\r\n        }\r\n      }\r\n    }\r\n\r\n    function back() {\r\n      if (false) {\r\n        // setSliderActive({...sliderActive, isActive : false})\r\n      } else {\r\n\r\n        \r\n\r\n          if (responce.isShablonModalActive) {\r\n            setResponce((responce) => ({\r\n              ...responce,\r\n              isShablonModalActive: false,\r\n            }));\r\n          } else {\r\n            if (responce.shablonMaker) {\r\n              setResponce((responce) => ({ ...responce, shablonMaker: false }));\r\n            } else {\r\n              if (responce.isOpen) {\r\n                setResponce((value) => ({ ...value, isOpen: false }));\r\n              } else {\r\n                if (card.isOpen){\r\n                  setCard((value) => ({...value , isOpen : false}))\r\n                }\r\n                else{\r\n                  if (isProfile){\r\n                    setProfile(false)\r\n                  }\r\n                  else{\r\n                    setDetails((value) => ({ ...value, isOpen: false }));\r\n                  }\r\n                }\r\n              }\r\n            \r\n          }\r\n        \r\n        }\r\n\r\n\r\n      }\r\n    }\r\n\r\n    MainButton.onClick(forward);\r\n    BackButton.onClick(back);\r\n    if (details.isOpen) {\r\n      BackButton.show();\r\n      MainButton.show();\r\n\r\n      if (gotIt) {\r\n        MainButton.setParams({\r\n          //неизвесетно\r\n          color: \"#2f2f2f\",\r\n          text_color: \"#606060\",\r\n        });\r\n      } else {\r\n        if (!responce.isOpen) {\r\n          MainButton.setParams({\r\n            is_active: true,\r\n            color: \"#2ea5ff\",\r\n            text_color: \"#ffffff\",\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      BackButton.hide();\r\n      MainButton.hide();\r\n      MainButton.offClick(forward);\r\n      BackButton.offClick(back);\r\n      MainButton.setParams({\r\n        is_active: true,\r\n        color: \"#2ea5ff\",\r\n        text_color: \"#ffffff\",\r\n      });\r\n    }\r\n    return () => {\r\n      MainButton.offClick(forward);\r\n      BackButton.offClick(back);\r\n    };\r\n  }, [\r\n    details.isOpen,\r\n    responce.isOpen,\r\n    gotIt,\r\n    responce.isShablonModalActive,\r\n    responce.shablonMaker,\r\n    isProfile,\r\n    setProfile,\r\n    card.isOpen,\r\n    setCard\r\n  ]);\r\n\r\n  useEffect( () => {\r\n      function backFunction(){\r\n          if (card.isOpen){\r\n            setCard((value) => ({...value , isOpen : false}))\r\n          }\r\n          else{\r\n            \r\n            if (isProfileOpen){\r\n              setProfileOpen(false)\r\n            }\r\n            else{\r\n              if (extraDetails.isOpen){\r\n                setExtraDetails((value) => ({...value , isOpen : false}))\r\n              }\r\n              else{\r\n                if (myResponse.isActive){\r\n                  setMyResponse((value) => ({...value , isActive : false}))\r\n                }\r\n              }\r\n            }\r\n          }\r\n      }\r\n      if (myResponse.isActive){\r\n        BackButton.onClick(backFunction)\r\n        BackButton.show()\r\n      }\r\n      else{\r\n        BackButton.hide()\r\n        BackButton.offClick(backFunction)\r\n      }\r\n      return () => {\r\n        BackButton.offClick(backFunction)\r\n          BackButton.hide()\r\n        \r\n      }\r\n  } , [myResponse.isActive, isProfileOpen, card.isOpen, setMyResponse, setProfileOpen, extraDetails.isOpen, setCard] )\r\n\r\n\r\n\r\n  useEffect( () => {\r\n    function backFunction(){\r\n      if (card.isOpen){\r\n        setCard((value) => ({...value , isOpen : false}))\r\n      }\r\n    }\r\n    if (card.isOpen){\r\n      BackButton.show()\r\n      BackButton.onClick(backFunction)\r\n    }\r\n    else{\r\n      if (!myResponse.isActive){\r\n        BackButton.hide()\r\n      }\r\n      BackButton.offClick(backFunction)\r\n    }\r\n  } , [setCard, card.isOpen, myResponse.isActive] )\r\n\r\n  useEffect(() => {\r\n    if (details.isOpen) {\r\n      MainButton.setText(\"ОТКЛИКНУТЬСЯ\");\r\n    }\r\n  }, [details.isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (responce.text.length < 3 && responce.isOpen) {\r\n      MainButton.setParams({\r\n        is_active: false, //неизвесетно\r\n        color: \"#2f2f2f\",\r\n        text_color: \"#606060\",\r\n      });\r\n    } else {\r\n      if (responce.isOpen) {\r\n        MainButton.setParams({\r\n          color: \"#2ea5ff\",\r\n          text_color: \"#ffffff\",\r\n          is_active: true,\r\n        });\r\n      }\r\n    }\r\n  }, [responce.text, responce.isOpen]);\r\n\r\n  const forwardFunction = useCallback(() => {\r\n    async function postResponce(advertismetId, userId) {\r\n      let myFormData = new FormData();\r\n      myFormData.append(\"information\", responce.text);\r\n\r\n      myFormData.append(\"userId\", userId);\r\n      myFormData.append(\"advertismentId\", advertismetId);\r\n\r\n      responce.photos.forEach((e, i) => {\r\n        myFormData.append(`photos`, e);\r\n      });\r\n      try {\r\n        let im = await axios.post(\r\n          \"https://back-birga.ywa.su/response\",\r\n          myFormData,\r\n          {\r\n            params: {\r\n              userId: userId,\r\n              advertisementId: advertismetId,\r\n            },\r\n          }\r\n        );\r\n        await axios.get(\"https://back-birga.ywa.su/user/sendMessage\", {\r\n          params: {\r\n            chatId: im.data.user.chatId,\r\n            text:\r\n              '📣 Вы получили отклик на задачу «' +\r\n              savedTasks[details.id].taskName.bold() +\r\n              '» от' +\r\n              im.data.user.fl,\r\n          },\r\n        });\r\n        dispatch(addResponce([savedTasks[details.id].id, im.data]));\r\n      } catch (e) {\r\n        window.Telegram.WebApp.showAlert(\"ничего не вышло\");\r\n        console.warn(e);\r\n      }\r\n    }\r\n\r\n    if (responce.isOpen && !responce.shablonMaker) {\r\n      window.Telegram.WebApp.showPopup(\r\n        {\r\n          title: \"Откликнуться?\",\r\n          message: \"Вы действительно хотите откликнуться?\",\r\n          buttons: [\r\n            { id: \"save\", type: \"default\", text: \"Да\" },\r\n            { id: \"delete\", type: \"destructive\", text: \"Нет\" },\r\n          ],\r\n        },\r\n        (buttonId) => {\r\n          if (buttonId === \"delete\" || buttonId === null) {\r\n            // setShablon({...shablon , isActive : false})\r\n          }\r\n          if (buttonId === \"save\") {\r\n            postResponce(savedTasks[details.id].id, 2144832745);\r\n            setResponce((value) => ({ ...value, isOpen: false }));\r\n            setDetails((value) => ({ ...value, isOpen: false }));\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }, [responce, savedTasks, details.id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    MainButton.onClick(forwardFunction);\r\n    return () => {\r\n      MainButton.offClick(forwardFunction);\r\n    };\r\n  }, [forwardFunction]);\r\n\r\n\r\n  const openCard = useCallback(\r\n    (card) => {\r\n      setCard({ isOpen: true, card: card });\r\n    },\r\n    [setCard]\r\n  );\r\n\r\n  useListner({\r\n    isMenuActive,\r\n    setMenuActive,\r\n    // setDetailsActive,\r\n    // isDetailsActive,\r\n  });\r\n\r\n  return (\r\n    <div className=\"saved-wraper\">\r\n      <Top\r\n        setMenuActive={setMenuActive}\r\n        name={\"Сохраненное\"}\r\n        className={\"saved-top-wrapper\"}\r\n      />\r\n      <FullPicker\r\n        GreyIntWidth={GreyIntWidth}\r\n        GreyWidth={GreyWidth}\r\n        nowKey={nowKey}\r\n        setNowKey={setNowKey}\r\n        values={values}\r\n        keys={keys}\r\n\r\n      />\r\n\r\n      <Choicer setCard = {setCard} setResponce = {setMyResponse} setDetails={setDetails} keys={keys} nowKey={nowKey} />\r\n\r\n      <CSSTransition\r\n        in={myResponse.isActive}\r\n        timeout={400}\r\n        unmountOnExit\r\n        mountOnEnter\r\n        classNames={\"left-right\"}\r\n      >\r\n        <SavedResponse setDetails = {setExtraDetails} setProfileOpen = {setProfileOpen} response={myResponse.responce} />\r\n      </CSSTransition>\r\n      \r\n      <CSSTransition\r\n        in={isProfileOpen}\r\n        classNames={\"left-right\"}\r\n        timeout={400}\r\n        unmountOnExit\r\n        mountOnEnter\r\n      >\r\n            <SavedProfile openFunc={openCard}  responce={myResponse.responce} />\r\n      </CSSTransition>\r\n      \r\n\r\n      <CSSTransition\r\n        in={extraDetails.isOpen}\r\n        timeout={400}\r\n        classNames={\"left-right\"}\r\n        unmountOnExit\r\n        mountOnEnter\r\n      >\r\n        <FirstDetails style = {{\r\n          zIndex : '2002'\r\n        }}  orderInformation={myResponse.responce.advertisement} />\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        in={details.isOpen}\r\n        timeout={400}\r\n        classNames={\"left-right\"}\r\n        unmountOnExit\r\n        mountOnEnter\r\n      >\r\n        <FirstDetails setProfile={setProfile}  orderInformation={savedTasks[details.id]} />\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        in={responce.isOpen}\r\n        timeout={400}\r\n        classNames={\"left-right\"}\r\n        unmountOnExit\r\n        mountOnEnter\r\n      >\r\n          <Responce\r\n            \r\n            left=\"0%\"\r\n            responce={responce}\r\n            setResponce={setResponce}\r\n            orderInformation={savedTasks[details.id]}\r\n          />\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        in={card.isOpen}\r\n        classNames={\"left-right\"}\r\n        timeout={400}\r\n        unmountOnExit\r\n        mountOnEnter\r\n      >\r\n        <CardPage card={card.card} />\r\n      </CSSTransition>\r\n\r\n\r\n      <CSSTransition\r\n            in={isProfile}\r\n            timeout={400}\r\n            classNames=\"left-right\"\r\n            mountOnEnter\r\n            unmountOnExit\r\n          >\r\n            <AboutReaction setOneCard={setCard} responce={savedTasks[details.id] ? { createNumber : savedTasks[details.id].createNumber  , user : savedTasks[details.id].user} : {}}\r\n            />\r\n          </CSSTransition>\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(SavedPage);\r\n"],"names":["FullPicker","_ref","values","keys","nowKey","setNowKey","className","GreyIntWidth","GreyWidth","myTransform","useMemo","i","length","toString","_jsxs","cl","track","join","children","_jsx","style","width","transform","greyBlock","map","e","_Fragment","bigValue","onClick","value","loup","display","memo","window","Telegram","WebApp","showAlert","Reaction","blue","setOpen","put","openAboutReactionFunc","responce","writeButton","agree","isWatched","border","photos","src","URL","createObjectURL","alt","objectFit","isActive","user","photo","userPhoto","textDecoration","color","textUnderlineOffset","fl","stage","height","viewBox","fill","xmlns","d","stroke","MyButton","openTelegramLink","link","FalseTie","navigate","task","id","breakShare","opacity","share","marginLeft","marginBottom","ChoicerInfo","text","arr","setDetails","setResponce","setCard","options","animationData","sleeping","loop","justifyContent","marginRight","openFunc","useCallback","card","isOpen","View","useLottie","array","FirstBlock","index","setDetailsActive","isButton","Case","title","description","watchOnly","Choicer","savedTasks","useSelector","state","saves","tasks","savedResponces","responces","savedCards","cards","SavedResponse","response","setProfileOpen","advertisement","TextAboutMe","textareaClassName","aboutU","information","marginTop","formatDate","Date","createdAt","SavedProfile","setCards","useState","useEffect","async","localCards","allCards","axios","get","params","userId","data","files","makeNewFile","folder","push","behanceLink","behance","dribbbleLink","dribble","dropfileLink","dropFile","photosNames","console","log","getAllCards","then","AboutTop","AboutInfo","AboutMain","about","Compact","Stage","number","MyLoader","ExampleWorks","SavedPage","pagesHistory","myResponse","setMyResponse","name","isShablonModalActive","shablonIndex","isShablon","shablonMaker","isMenuActive","menu","dispatch","useDispatch","isProfileOpen","isProfile","setProfile","document","documentElement","clientWidth","details","extraDetails","setExtraDetails","setMenuActive","set","changeMenuActive","gotIt","BackButton","show","forward","showPopup","message","back","MainButton","setParams","text_color","is_active","hide","offClick","backFunction","setText","forwardFunction","buttons","type","buttonId","advertismetId","myFormData","FormData","append","forEach","im","post","advertisementId","chatId","taskName","bold","addResponce","warn","postResponce","openCard","useListner","Top","CSSTransition","in","timeout","unmountOnExit","mountOnEnter","classNames","FirstDetails","zIndex","orderInformation","Responce","left","CardPage","AboutReaction","setOneCard","createNumber"],"sourceRoot":""}