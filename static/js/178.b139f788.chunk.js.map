{"version":3,"file":"static/js/178.b139f788.chunk.js","mappings":"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","sources":["components/MyAds/ResponseBlock.jsx","webpack://new-react/./src/components/UI/AdCreateFunc/AdCreateFunc.module.css?e924","images/icons/plus-circle.svg","components/UI/AdCreateFunc/AdCreateFunc.jsx","components/UI/ModalChoicer/ModalChoicer.jsx","functions/sortFiles.js","pages/MyAds/components/LastAds.jsx","pages/MyAds/components/MyAdsBlock.jsx","pages/MyAds/components/MyAnimation.jsx","components/MyAds/SuspenseBlock.jsx","pages/MyAds/components/AdsContainer.jsx","pages/MyAds/components/PickerTwo.jsx","pages/MyAds/components/ResponseSuspense.jsx","pages/MyAds/components/MyResponses.jsx","pages/MyAds/components/PickerOne.jsx","pages/MyAds/components/PickerContent.jsx","pages/MyAds/components/MyAdOne.jsx","pages/MyAds/components/ReactionSuspense.jsx","pages/MyAds/components/Responses.jsx","pages/MyAds/components/ReactionBlock.jsx","pages/MyAds/components/AllReactions.jsx","pages/MyAds/components/AboutOne.jsx","hooks/MyAds/useButton.jsx","webpack://new-react/./src/components/MyAds/ShowMyResponse/ShowMyResponse.module.css?ffc0","components/MyAds/MyReaction.jsx","webpack://new-react/./src/components/MyAds/Customer/Customer.module.css?e370","components/MyAds/Customer/Customer.jsx","components/MyAds/ShowMyResponse/ShowMyResponse.jsx","pages/MyAds/components/MyLastAds.jsx","pages/MyAds/MyAds.jsx","hooks/MyAds/useSave.js","pages/MyAds/components/AboutReaction.jsx","functions/breakShare.js","pages/MyAds/components/Reaction.jsx"],"sourcesContent":["import React, { memo, useMemo } from \"react\";\r\nimport Pallete from \"../UI/Pallete/Pallete\";\r\nimport ShareIcon from \"../UI/ShareIcon/ShareIcon\";\r\nimport SmallDimond from \"../UI/SmallDimond/SmallDimond\";\r\nimport FalseTie from \"../UI/FalseTie/FalseTie\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport MyButton from \"../UI/MyButton/MyButton\";\r\nimport formatDate from \"../../functions/makeDate\";\r\n\r\nconst ResponseBlock = ({\r\n  className,\r\n  taskName,\r\n  time,\r\n  tonValue,\r\n  photos,\r\n  isMyAds,\r\n  setSlideActive,\r\n  func,\r\n  buttonText,\r\n  task,\r\n  id,\r\nindex ,\r\nisWatched,\r\ncategory,\r\n...props\r\n\r\n\r\n}) => {\r\n\r\n  const tonConstant = useSelector(state => state.ton.value)\r\n\r\n  const watchingValue = useMemo( () => {\r\n    if (isWatched === \"\"){\r\n        return \"Не просмотрено\"\r\n    }\r\n    if (isWatched === \"watched\"){\r\n        return \"Просмотрено\"\r\n    }\r\n    if (isWatched === \"inProcess\"){\r\n      return \"В работе\"\r\n    }\r\n    if (isWatched === \"completed\"){\r\n      return \"Завершено\"\r\n    }\r\n  } , [isWatched] )\r\n\r\n  const style = useMemo( () => {\r\n      switch (isWatched){\r\n        case \"\":\r\n          return {color : \"#95979E\"}\r\n        case \"watched\":\r\n          return {color : \"#2ea5ff\"}\r\n        case \"chosen\":\r\n          return {color : \"#30d158\"}\r\n        case \"completed\":\r\n          return {color : \"#2ACF58\"}\r\n        default : \r\n          \r\n      }\r\n  } , [isWatched] )\r\n\r\n\r\n  return (\r\n    <>\r\n      {photos !== undefined ? (\r\n        <div\r\n        {...props}\r\n          className={\r\n            className ? [\"First__block\", className].join(\" \") : \"First__block\"\r\n          }\r\n        >\r\n          {photos.length ? (\r\n            <div className=\"first__photos\">\r\n              {photos.map((e, i) => {\r\n                return (\r\n                  <img\r\n                    onClick={() => {\r\n                      setSlideActive({\r\n                        isActive : true,\r\n                        index : i,\r\n                        photos : photos\r\n                      })\r\n                    }}\r\n                    key={i}\r\n                    src={URL.createObjectURL(e)}\r\n                    style={\r\n                      photos.length === 1\r\n                        ? {\r\n                            width: \"calc(100% - 3.67px)\",\r\n                          }\r\n                        : {}\r\n                    }\r\n                    className=\"first__photo\"\r\n                    alt=\"\"\r\n                  />\r\n                );\r\n                // return <img className='first__photo' src = {'https://back-birga.ywa.su/' + e} />\r\n              })}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <div style={style} className=\"status\">{watchingValue}</div>\r\n\r\n          \r\n\r\n\r\n          <div className=\"FirstMain__top\" style={isMyAds ? \r\n            {marginTop : \"13px\" } :\r\n            {}\r\n          }>\r\n            <Pallete category={category} />\r\n            <p >{taskName}</p>\r\n            <ShareIcon onClick = {() => {\r\n                              window.Telegram.WebApp.openTelegramLink(\r\n                                \"https://t.me/share/url?text=&url=https://t.me/ConnectexBot/task?startapp=\" + String(id)\r\n                              );\r\n            }} className=\"share__icon\" />\r\n          </div>\r\n          <div className=\"FirstMain__middle\">\r\n            {/* <p>{executionPlace}</p> */}\r\n            <p> {\"Начать: \" + formatDate(time.start)}</p>\r\n          </div>\r\n          <div className=\"FirstMain__bottom\">\r\n            <div className=\"FirstMain__bottom-left\">\r\n              <div className=\"FirstMain__price-up\">\r\n                <h3>{tonValue} TON</h3>\r\n                <SmallDimond />\r\n              </div>\r\n              <p>\r\n                ~{\" \"}\r\n                {Number((tonValue * tonConstant).toFixed(0)).toLocaleString(\r\n                  \"ru-RU\"\r\n                )}{\" \"}\r\n                RUB\r\n              </p>\r\n            </div>\r\n            <div className=\"FirstMain__bottom-right\">\r\n\r\n            <FalseTie task={task} id={id} navigate={'advertisement'}  />\r\n            <MyButton  onClick = {() => {\r\n              func(index)\r\n            }} >\r\n                {buttonText}\r\n            </MyButton>\r\n\r\n\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(ResponseBlock);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"AdCreactingFunction\":\"AdCreateFunc_AdCreactingFunction__Pe093\"};","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPlusCircle(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 26,\n    viewBox: \"0 0 25 26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.3614 14.1985V14.0319H11.1948H7.92815C7.34911 14.0319 6.9503 13.6379 6.9503 13.0773C6.9503 12.7896 7.05162 12.55 7.21894 12.3826C7.3861 12.2153 7.62853 12.1108 7.92815 12.1108H11.1948H11.3614V11.9442V8.66404C11.3614 8.36967 11.4633 8.12969 11.6265 7.96391C11.7896 7.79822 12.023 7.69756 12.3035 7.69756C12.5978 7.69756 12.8405 7.79948 13.0091 7.96567C13.1775 8.13165 13.2814 8.37099 13.2814 8.66404V11.9442V12.1108H13.448H16.7266C17.3009 12.1108 17.6925 12.5121 17.6925 13.0773C17.6925 13.639 17.2925 14.0319 16.7266 14.0319H13.448H13.2814V14.1985V17.4787C13.2814 18.0392 12.8826 18.4332 12.3035 18.4332C11.753 18.4332 11.3614 18.0439 11.3614 17.4787V14.1985ZM24.5 13.0654C24.5 19.7244 18.9951 25.2321 12.3274 25.2321C5.67163 25.2321 0.166667 19.7245 0.166667 13.0654C0.166667 6.40602 5.65992 0.898722 12.3154 0.898722C18.9834 0.898722 24.5 6.40655 24.5 13.0654ZM2.31311 13.0654C2.31311 18.6317 6.76251 23.1083 12.3274 23.1083C17.8914 23.1083 22.3776 18.6325 22.3655 13.065C22.3534 7.49829 17.8796 3.03444 12.3154 3.03444C6.76265 3.03444 2.31311 7.49896 2.31311 13.0654Z\",\n    fill: \"#2EA5FF\",\n    stroke: \"#20303F\",\n    strokeWidth: 0.333333\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlusCircle);\nexport default __webpack_public_path__ + \"static/media/plus-circle.074bf38a1cc281d84aefa67021d3393a.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cl from \"./AdCreateFunc.module.css\";\r\nimport plus from \"../../../images/icons/plus-circle.svg\";\r\nconst AdCreateFunc = ({ link, text, func, className, ...props }) => {\r\n  return (\r\n    <>\r\n      {link ? (\r\n        <Link\r\n          {...props}\r\n          to={link}\r\n          className={\r\n            className\r\n              ? [cl.AdCreactingFunction, className].join(\" \")\r\n              : cl.AdCreactingFunction\r\n          }\r\n        >\r\n          <img src={plus} alt=\"\" />\r\n          <p>{text}</p>\r\n        </Link>\r\n      ) : (\r\n        <div {...props} onClick={func} \r\n        className={\r\n          className\r\n            ? [cl.AdCreactingFunction, className].join(\" \")\r\n            : cl.AdCreactingFunction\r\n        }>\r\n          <img src={plus} alt=\"\" />\r\n          <p>{text}</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdCreateFunc;\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Select as BaseSelect } from '@mui/base/Select';\r\nimport { Option as BaseOption, optionClasses } from '@mui/base/Option';\r\nimport { styled } from '@mui/system';\r\nimport { CssTransition } from '@mui/base/Transitions';\r\nimport { PopupContext } from '@mui/base/Unstable_Popup';\r\n\r\n\r\n\r\n\r\nconst Select = React.forwardRef(function Select(props, ref) {\r\n  const slots = {\r\n    root: CustomButton,\r\n    listbox: AnimatedListbox,\r\n    popup: Popup,\r\n    ...props.slots,\r\n  };\r\n\r\n  return <BaseSelect {...props} ref={ref} slots={slots} />;\r\n});\r\n\r\nexport default function ModalChoicer({values, className, names, setValue, defaultValue , ...props}) {\r\n\r\n  return (\r\n\r\n    <Select {...props} className = {className} onChange = {(...newValue) => {\r\n        setValue(newValue[1])\r\n    }}  defaultValue={defaultValue} >\r\n        {values.map((e , i) => {\r\n            return (\r\n                <Option  key={i} value={e}>{names[i]}</Option>\r\n            )\r\n        })}\r\n    </Select>\r\n  );\r\n}\r\n\r\nconst blue = {\r\n  100: '#DAECFF',\r\n  200: '#99CCF3',\r\n  400: '#3399FF',\r\n  500: '#007FFF',\r\n  600: '#0072E5',\r\n  700: '#0059B2',\r\n  900: '#003A75',\r\n};\r\n\r\nconst grey = {\r\n  50: '#F3F6F9',\r\n  100: '#E5EAF2',\r\n  200: '#DAE2ED',\r\n  300: '#C7D0DD',\r\n  400: '#B0B8C4',\r\n  500: '#9DA8B7',\r\n  600: '#6B7A90',\r\n  700: '#434D5B',\r\n  800: '#303740',\r\n  900: '#1C2025',\r\n};\r\n\r\nconst CustomButton = React.forwardRef(function CustomButton(props, ref) {\r\n  const { ownerState, ...other } = props;\r\n  return (\r\n    <StyledButton type=\"button\" {...other} ref={ref}>\r\n      {other.children}\r\n\r\n      <svg width=\"11\" height=\"13\" viewBox=\"0 0 11 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path d=\"M5.36086 0.000976562C5.14813 0.000976562 4.96199 0.100693 4.74262 0.273536L0.255358 3.90323C0.0958106 4.03619 -0.00390625 4.23562 -0.00390625 4.48159C-0.00390625 4.93364 0.361722 5.26603 0.780533 5.26603C0.973319 5.26603 1.16611 5.1929 1.35889 5.04L5.36751 1.80918L9.36948 5.04C9.55562 5.1929 9.75505 5.26603 9.94784 5.26603C10.3666 5.26603 10.7323 4.93364 10.7323 4.48159C10.7323 4.23562 10.6326 4.03619 10.473 3.90323L5.97911 0.273536C5.76638 0.100693 5.58024 0.000976562 5.36086 0.000976562ZM5.36086 12.3193C5.58024 12.3193 5.76638 12.2263 5.97911 12.0534L10.473 8.42373C10.6326 8.28413 10.7323 8.08469 10.7323 7.84537C10.7323 7.38667 10.3666 7.05428 9.94784 7.05428C9.75505 7.05428 9.55562 7.13406 9.36948 7.28696L5.36751 10.5178L1.35889 7.28696C1.16611 7.13406 0.973319 7.05428 0.780533 7.05428C0.361722 7.05428 -0.00390625 7.38667 -0.00390625 7.84537C-0.00390625 8.08469 0.0958106 8.28413 0.255358 8.42373L4.74262 12.0468C4.96199 12.2263 5.14813 12.3193 5.36086 12.3193Z\" fill=\"#2EA5FF\" />\r\n</svg>\r\n\r\n    </StyledButton>\r\n  );\r\n});\r\n\r\nCustomButton.propTypes = {\r\n  children: PropTypes.node,\r\n  ownerState: PropTypes.object.isRequired,\r\n};\r\n\r\nconst StyledButton = styled('button', { shouldForwardProp: () => true })(\r\n  ({ theme }) => `\r\n    align-items : center;\r\n    display : flex;\r\n    gap : 4px;\r\n    padding : 0px;\r\n    text-transform : uppercase;\r\n    font-family: \"SF Pro Display 400\";\r\n    font-weight: 400;\r\n    font-size: 13.33px;\r\n    letter-spacing: 0.02em;\r\n    text-align: right;\r\n    color: #2ea5ff;\r\n    background-color : transparent;\r\n    border : none\r\n  `,\r\n);\r\n\r\nconst Listbox = styled('ul')(\r\n  ({ theme }) => `\r\n  font-family: 'IBM Plex Sans', sans-serif;\r\n  font-size: 0.875rem;\r\n  box-sizing: border-box;\r\n  padding: 6px;\r\n  margin: 12px 0;\r\n  min-width: 200px;\r\n  border-radius: 12px;\r\n  overflow: auto;\r\n  outline: 0px;\r\n  background: ${grey[900]};\r\n  border: 1px solid ${grey[700]};\r\n  color: ${grey[300]};\r\n  box-shadow: 0px 2px 4px rgba(0,0,0, 0.5);\r\n  .closed & {\r\n    opacity: 0;\r\n    transform: scale(0.95, 0.8);\r\n    transition: opacity 200ms ease-in, transform 200ms ease-in;\r\n  }\r\n  \r\n  .open & {\r\n    opacity: 1;\r\n    transform: scale(1, 1);\r\n    transition: opacity 100ms ease-out, transform 100ms cubic-bezier(0.43, 0.29, 0.37, 1.48);\r\n  }\r\n\r\n  .placement-top & {\r\n    transform-origin: bottom;\r\n  }\r\n\r\n  .placement-bottom & {\r\n    transform-origin: top;\r\n  }\r\n  `,\r\n);\r\n\r\n\r\nconst AnimatedListbox = React.forwardRef(function AnimatedListbox(props, ref) {\r\n    const { ownerState, ...other } = props;\r\n    const popupContext = React.useContext(PopupContext);\r\n  \r\n    if (popupContext == null) {\r\n      throw new Error(\r\n        'The `AnimatedListbox` component cannot be rendered outside a `Popup` component',\r\n      );\r\n    }\r\n  \r\n    const verticalPlacement = popupContext.placement.split('-')[0];\r\n  \r\n    return (\r\n      <CssTransition\r\n        className={`placement-${verticalPlacement}`}\r\n        enterClassName=\"open\"\r\n        exitClassName=\"closed\"\r\n      >\r\n        <Listbox {...other} ref={ref} />\r\n      </CssTransition>\r\n    );\r\n  });\r\n  \r\n  AnimatedListbox.propTypes = {\r\n    ownerState: PropTypes.object.isRequired,\r\n  };\r\n\r\n\r\n\r\nconst Option = styled(BaseOption)(\r\n  ({ theme }) => `\r\n  list-style: none;\r\n  padding: 8px;\r\n  border-radius: 8px;\r\n  cursor: default;\r\n\r\n  &:last-of-type {\r\n    border-bottom: none;\r\n  }\r\n\r\n  &.${optionClasses.selected} {\r\n    background-color: ${blue[900]};\r\n    color: ${ blue[100] };\r\n  }\r\n\r\n  &.${optionClasses.highlighted} {\r\n    background-color: ${grey[800]};\r\n    color: ${grey[300]};\r\n  }\r\n\r\n  &:focus-visible {\r\n    outline: 3px solid ${blue[600]};\r\n  }\r\n\r\n  &.${optionClasses.highlighted}.${optionClasses.selected} {\r\n    background-color: ${blue[900]};\r\n    color: ${blue[100] };\r\n  }\r\n\r\n  &.${optionClasses.disabled} {\r\n    color: ${grey[700] };\r\n  }\r\n\r\n  &:hover:not(.${optionClasses.disabled}) {\r\n    background-color: ${ grey[800] };\r\n    color: ${grey[300]};\r\n  }\r\n  `,\r\n);\r\n\r\nconst Popup = styled('div')`\r\n  z-index: 1;\r\n`;","function sortFiles(photosNames , files){\r\n\r\n    let removedArr = []\r\n    let addedArr = []\r\n    for (let fileName of photosNames ){\r\n        if (!files.find(e => e.name === fileName)){\r\n          removedArr.push(fileName)\r\n        }\r\n    }\r\n    for (let file of files){\r\n      if (file.name.includes('nick')){\r\n        addedArr.push(file)\r\n      }\r\n    }\r\n    return {\r\n        removedArr : removedArr,\r\n        addedArr : addedArr\r\n    }\r\n    \r\n}\r\nexport default sortFiles","import React, { memo, useCallback, useEffect } from \"react\";\r\n\r\nimport Top from \"../../../components/UI/Top/Top\";\r\nimport Reaction from \"./Reaction\";\r\nimport TextAboutMe from \"../../../components/UI/AboutMeText/TextAboutMe\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeMenuActive } from \"../../../store/menuSlice\";\r\nimport formatDate from \"../../../functions/makeDate\";\r\nimport { postResponse } from \"../../../store/responses\";\r\nconst LastAds = ({\r\n\r\n  openAboutReactionFunc,\r\n\r\n  responce\r\n}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const setMenuActive = useCallback(\r\n    (arg) => {\r\n      dispatch(changeMenuActive(arg));\r\n    },\r\n    [dispatch]\r\n  );\r\n  useEffect( () => {\r\n    if (responce.isWatched !== \"watched\" && responce.isWatched !== \"inProcess\"){\r\n      dispatch(postResponse(responce.id))\r\n    }\r\n    // eslint-disable-next-line\r\n  } , [] )\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div\r\n      className={\"last-ads\"}\r\n    >\r\n      <Top setMenuActive={setMenuActive} className={\"last-top\"} name={\"Отклики\"} />\r\n\r\n      {/* <LastTop name = {name} photo = {photo} stage = {stage} openAboutReactionFunc={openAboutReactionFunc} /> */}\r\n\r\n      <Reaction blue = {true}   openAboutReactionFunc = {openAboutReactionFunc} put={true} responce={responce} />\r\n      \r\n      {/* <LastImages images = {images} /> */}\r\n      \r\n\r\n      {/* <LastSertificates /> */}\r\n      <TextAboutMe textareaClassName={\"new-textarea\"} style = {\r\n        {\r\n          marginTop : \"8px\"\r\n        }\r\n      } aboutU={responce.information} />\r\n\r\n      <p className=\"creationTime\">{ \"Создано \" + formatDate(new Date(responce.createdAt)) }</p>\r\n\r\n      \r\n{/* \r\n      <textarea className=\"last-textarea\" name=\"\" id=\"\" value={text} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(LastAds);\r\n","import React, { memo, useMemo } from \"react\";\r\nimport FullPicker from \"../../../components/UI/FullPicker/FullPicker\";\r\nimport ModalChoicer from \"../../../components/UI/ModalChoicer/ModalChoicer\";\r\nimport { useSelector } from \"react-redux\";\r\nconst values = [\"Я исполнитель\", \"Я заказчик\"];\r\nconst keys = [\"freelancer\", \"customer\"];\r\nconst MyAdsBlock = ({  nowValue, setNowKey,  greyWidth , greyIntWidth, setOneValue, setTwoValue  }) => {\r\n  const me = useSelector(state => state.telegramUserInfo)\r\n  const responses = useSelector(state => state.responses.responses)\r\n  const advertisements = useSelector(state => state.information.myAdsArray)\r\n  const finishedDeals = useMemo( () => {\r\n    let rezult = String((me.deals + me.completedTasks.length) / (advertisements.length + responses.length) * 100 ).slice(0,2) + \" %\"\r\n    return isNaN(rezult) ? \"0%\" : rezult\r\n\r\n  } , [advertisements,responses, me.completedTasks.length, me.deals] )\r\n  return (\r\n    <div className=\"MyAdsBlock\">\r\n      <div className=\"counter__block\">\r\n        <div className=\"number-of-transactions\">\r\n          <p>{me.deals}</p>\r\n          <p>Количество сделок</p>\r\n        </div>\r\n        <div className=\"number-of-transactions\">\r\n          <p>{finishedDeals}</p>\r\n          <p>Завершенные сделки</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"YourAds\">\r\n        <p>Ваши объявления</p>\r\n        <ModalChoicer style = {nowValue === \"customer\" ? {display : \"none\"} : {}} values={[\"all\" , \"inProcess\" , \"watched\" , \"unWatched\", \"completed\"]} names={[\"Все\", \"В работе\", \"Просмотренные\", \"Непросмотренные\", \"Завершенные\"]} setValue={setOneValue} defaultValue={\"all\"} />\r\n        \r\n        <ModalChoicer style = {nowValue === \"customer\" ? {} : {display : \"none\"}} values={[\"all\" , \"active\", \"inProcess\" , \"completed\"]} names={[\"Все\" , \"Активные\" , \"В работе\" , \"Завершенные\"]} setValue={setTwoValue} defaultValue={\"all\"} />\r\n        \r\n      </div>\r\n      <div className=\"pick\">\r\n        <FullPicker\r\n        GreyIntWidth={greyIntWidth}\r\n        GreyWidth={greyWidth}\r\n          className={\"MyAds__FullPicker\"}\r\n          values={values}\r\n          nowKey={nowValue}\r\n          setNowKey={setNowKey}\r\n          keys={keys}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(MyAdsBlock);\r\n","import React from \"react\";\r\nimport sad from \"../../../animation/sadAnimation.json\";\r\nimport { useLottie } from \"lottie-react\";\r\nconst MyAnimation = ({\r\n  text = \"Вы не откликнулись ни на одно задание\",\r\n  height = \"calc(100vh-252px)\",\r\n  ...props\r\n}) => {\r\n  const options = {\r\n    animationData: sad,\r\n    loop: true,\r\n    style: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      width: \"200px\",\r\n    },\r\n  };\r\n\r\n  const { View } = useLottie(options);\r\n  return (\r\n    <div \r\n        {...props}\r\n      className=\"animation-block\"\r\n      onClick={() => {\r\n        window.Telegram.WebApp.openTelegramLink(\"https://t.me/addstickers/DonutTheDog\")\r\n      }}\r\n    >\r\n      {View}\r\n      <p className=\"animation-text\">{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyAnimation;\r\n","import React, { lazy, Suspense, useEffect, useMemo, useState } from 'react';\r\nimport BlockSpinner from '../UI/BlockSpinner/BlockSpinner';\r\nimport { useInView } from 'react-intersection-observer';\r\nconst Block = lazy( () => import(\"../../pages/MyAds/components/Block\") )\r\n\r\nconst SuspenseBlock = ({i , e, setSecondPage}) => {\r\n    const { ref, inView } = useInView({\r\n        threshold: 0, // Порог видимости (от 0 до 1)\r\n      });\r\n    const [isVisible, setVisible] = useState(false)\r\n    useEffect( () => {\r\n        if (inView){\r\n            setVisible(true)\r\n        }\r\n    } , [inView] )\r\n    const style = useMemo( () =>{\r\n        if (e.photos.length > 0){\r\n            return {minHeight : \"314px\" , position : \"relative\"}\r\n        }\r\n        else{\r\n            return {minHeight : \"178px\", position : \"relative\"}\r\n        }\r\n    } , [e.photos] )\r\n    return (\r\n        <div className='First__block' style={!isVisible ? style : {}} >\r\n            <div ref={ref} style={{\r\n                width : \"1px\",\r\n                height : \"1100px\",\r\n                position : \"absolute\",\r\n                top : \"-900px\",\r\n                opacity : \"0\",\r\n                left : \"40px\",\r\n                zIndex : -1\r\n            }} className=\"catch_block\"></div>\r\n            {isVisible &&  <Suspense fallback = {<BlockSpinner style = {e.photos.length > 0 ? {height : \"313px\"} : {height : \"144px\"}}   />}>\r\n                        <Block e={e} i={i} setSecondPage={setSecondPage}/>\r\n                </Suspense>\r\n                }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuspenseBlock;","import React, {  memo,  useCallback, useEffect, useRef, useState } from 'react';\r\nimport MyLoader from '../../../components/UI/MyLoader/MyLoader';\r\nimport SuspenseBlock from '../../../components/MyAds/SuspenseBlock';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchMyOrders } from '../../../store/information';\r\n\r\nconst AdsContainer = ({myAdsArray, setSecondPage,  deleteFunction}) => {\r\n\r\n\r\n    const [page , setPage] = useState(2)\r\n    const orderStatus = useSelector(state => state.information.myOrderStatus)\r\n    const elementRef = useRef(null)\r\n    const dispatch = useDispatch()\r\n\r\n    const getMore = useCallback(async () => {\r\n      dispatch(fetchMyOrders(page));\r\n      setPage(page + 1);\r\n    }, [page, setPage, dispatch]);\r\n\r\n    const onIntersaction = useCallback(\r\n      (entries) => {\r\n        const firtEntry = entries[0];\r\n\r\n        if (firtEntry.isIntersecting && orderStatus !== \"all\") {\r\n          getMore();\r\n        }\r\n      },\r\n      [orderStatus, getMore]\r\n    );\r\n\r\n\r\n    useEffect(() => {\r\n      const observer = new IntersectionObserver(onIntersaction);\r\n      if (observer && elementRef.current) {\r\n        observer.observe(elementRef.current);\r\n      }\r\n      return () => {\r\n        observer.disconnect();\r\n      };\r\n      // eslint-disable-next-line\r\n    }, [myAdsArray]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"AdsContainer\">\r\n          {myAdsArray.map((e, i) => {\r\n            return (\r\n                <SuspenseBlock key={i} e={e} i={i} setSecondPage={setSecondPage} />\r\n\r\n            );\r\n          })}\r\n          {orderStatus !== \"all\" &&  <MyLoader ref={elementRef}  style = {{ height : \"90px\" , marginLeft : \"-16px\"}} />}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(AdsContainer);  ","import React, { forwardRef, memo, useMemo,  } from 'react';\r\nimport AdCreateFunc from '../../../components/UI/AdCreateFunc/AdCreateFunc';\r\nimport MyAnimation from './MyAnimation';\r\nimport AdsContainer from './AdsContainer';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst PickerTwo = forwardRef(({setSecondPage , deleteFunction , myAdsArray, valueTwo} , ref) => {\r\n  const text = useMemo( () => {\r\n    switch (valueTwo){\r\n\r\n      case \"all\":\r\n        return \"У вас нет созданных заданий\"\r\n      case \"active\":\r\n        return \"У вас нет активных заданих\"\r\n      case \"inProcess\":\r\n        return \"У вас нет заданий в работе\"\r\n      case \"completed\":\r\n        return \"У вас нет завершенных заданий\"\r\n      default :\r\n        \r\n    }\r\n  } , [valueTwo] )\r\n\r\n\r\n  const status = useSelector(state => state.information.myOrderStatus)\r\n\r\n    return (\r\n        <div className=\"picker__block\" ref={ref}>\r\n        <AdCreateFunc text={\"Создать объявление\"} link={\"/AdCreating\"} />\r\n        {myAdsArray.length === 0 && status === \"all\" ? \r\n        <MyAnimation style = {{height : \"calc(100vh - 300px)\"}} text={text}/>\r\n        :\r\n        <AdsContainer myAdsArray={myAdsArray} setSecondPage={setSecondPage}  deleteFunction={deleteFunction} />\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    );\r\n} );\r\n\r\nexport default memo(PickerTwo);","\r\nimport React, { lazy, Suspense, useEffect, useMemo, useState } from 'react';\r\nimport BlockSpinner from '../../../components/UI/BlockSpinner/BlockSpinner';\r\nimport { useInView } from 'react-intersection-observer';\r\n// import ResponseBlock from '../../../components/MyAds/ResponseBlock';\r\n\r\nconst ResponseBlock = lazy( () => import(\"../../../components/MyAds/ResponseBlock\") )\r\nconst ResponseSuspense = ({func , index, buttonText , task, isWatched, advertisement}) => {\r\n    const { ref, inView } = useInView({\r\n        threshold: 0, // Порог видимости (от 0 до 1)\r\n      });\r\n    const [isVisible, setVisible] = useState(false)\r\n    useEffect( () => {\r\n        if (inView){\r\n            setVisible(true)\r\n        }\r\n    } , [inView] )\r\n    const style = useMemo( () =>{\r\n        if (advertisement.photos.length > 0){\r\n            return {minHeight : \"315px\"}\r\n        }\r\n        else{\r\n            return {minHeight : \"178px\"}\r\n        }\r\n    } , [advertisement.photos] )\r\n\r\n    return (\r\n        <div style={!isVisible ? style : {position : \"relative\"}} className=\"First__block\">\r\n            {\r\n                isVisible && <Suspense fallback = {<BlockSpinner style = {advertisement.photos.length > 0 ? {minHeight : \"315px\"} : {minHeight : \"178px\"}} />}>\r\n                    <ResponseBlock func={func} index={index} buttonText={buttonText} task={task} isWatched={isWatched} {...advertisement} />\r\n                </Suspense>\r\n            }\r\n            <div ref={ref} style={{\r\n                width : \"1px\",\r\n                height : \"1100px\",\r\n                position : \"absolute\",\r\n                top : \"-900px\",\r\n                opacity : \"0\",\r\n                zIndex : -1,\r\n                left : \"40px\"\r\n              \r\n            }} className=\"catch_block\"></div>\r\n    </div>\r\n       \r\n    );\r\n};\r\n\r\nexport default ResponseSuspense;","\r\nimport React, { forwardRef, useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nimport MyLoader from \"../../../components/UI/MyLoader/MyLoader\";\r\nimport ResponseSuspense from \"./ResponseSuspense\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchResponses } from \"../../../store/responses\";\r\nconst MyResponses = forwardRef( ({responsesArr, buttonFunction} , ref) => {\r\n\r\n\r\n  const me = useSelector(state => state.telegramUserInfo)\r\n  const [page , setPage] = useState(2)\r\n  const orderStatus = useSelector(state => state.responses.status)\r\n  const elementRef = useRef(null)\r\n  const dispatch = useDispatch()\r\n\r\n  const getMore = useCallback(async () => {\r\n    dispatch(fetchResponses([me,page]));\r\n    setPage(page + 1);\r\n  }, [page, setPage, dispatch, me]);\r\n\r\n  const onIntersaction = useCallback(\r\n    (entries) => {\r\n      const firtEntry = entries[0];\r\n\r\n      if (firtEntry.isIntersecting && orderStatus !== \"all\") {\r\n        getMore();\r\n      }\r\n    },\r\n    [orderStatus, getMore]\r\n  );\r\n\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(onIntersaction);\r\n    if (observer && elementRef.current) {\r\n      observer.observe(elementRef.current);\r\n    }\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [responsesArr]);\r\n\r\n  return (\r\n    <div className=\"AdsContainer\">\r\n      {responsesArr.map((e, i) => {\r\n        return (\r\n          <ResponseSuspense\r\n            func={buttonFunction}\r\n            index={i}\r\n            buttonText={\"МОЙ ОТКЛИК\"}\r\n            task={e}\r\n            isWatched={e.isWatched}\r\n            advertisement={e.advertisement}\r\n          />\r\n        );\r\n      })}\r\n\r\n      {orderStatus !== \"all\" &&  <MyLoader ref={elementRef}  style = {{ height : \"90px\" , marginLeft : \"-16px\"}} />}\r\n      \r\n    </div>\r\n  );\r\n} );\r\n\r\nexport default MyResponses;\r\n","import React, { forwardRef,  useMemo, useRef } from 'react';\r\nimport MyAnimation from './MyAnimation';\r\nimport MyResponses from './MyResponses';\r\nimport MyLoader from '../../../components/UI/MyLoader/MyLoader';\r\nimport {  useSelector } from 'react-redux';\r\n\r\n\r\nconst PickerOne = forwardRef(({responsesArr, buttonFunction,  oneValue} , ref) => {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const interRef = useRef(null)\r\n\r\n  \r\n    const responsesStatus = useSelector(state => state.responses.status)\r\n  \r\n   \r\n\r\n    const text = useMemo( () => {\r\n        switch (oneValue){\r\n            case \"all\":\r\n                return \"Вы не откликнулись ни на одно задание\"\r\n            case \"watched\":\r\n                return \"У вас нет просмотренных откликов\"\r\n            case \"inProcess\":\r\n                return \"У вас нет выполняемых заказов\"\r\n            case \"unWatched\":\r\n                return \"У вас нет непросмотренных задани\"\r\n            case \"completed\":\r\n                return \"У вас нет завершенных заказов\"\r\n            default : \r\n                window.Telegram.WebApp.showAlert(\"Что - то не то в PickerOne\")\r\n        }\r\n    }  , [oneValue])\r\n\r\n    return (\r\n\r\n        <>\r\n        {responsesStatus === \"pending\" && responsesArr.length === 0 ? \r\n        <MyLoader />\r\n        :\r\n\r\n        <div ref={ref} style={{\r\n            alignSelf : \"flex-start\"\r\n        }} className=\"picker__block\">\r\n            {responsesArr.length === 0 ? \r\n            \r\n                <MyAnimation text={text}/> \r\n            :\r\n                <MyResponses   responsesArr = {responsesArr} buttonFunction = {buttonFunction} />\r\n             }\r\n             <div ref={interRef} className=\"intersection-block\">\r\n\r\n             </div>\r\n      </div>\r\n        }\r\n        </>\r\n    );\r\n} );\r\n\r\nexport default PickerOne;","import React, { memo, useCallback, useEffect,  useRef,  } from \"react\";\r\n\r\nimport { deleteAd } from \"../../../store/information\";\r\nimport { useDispatch,  } from \"react-redux\";\r\nimport BackButton from \"../../../constants/BackButton\";\r\nimport PickerTwo from \"./PickerTwo\";\r\nimport PickerOne from \"./PickerOne\";\r\nconst PickerContent = ({\r\n  myAdsArray,\r\n  nowValue,\r\n  setSecondPage,\r\n  valueTwo,\r\n  valueOne,\r\n  myResponse,\r\n  setMyResponse,\r\n  details,\r\n  setDetails,\r\n  responsesArr\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const deleteFunction = useCallback(\r\n    (e) => {\r\n      window.Telegram.WebApp.showPopup(\r\n        {\r\n          title: \"Удалить?\",\r\n          message: \"Вы хотите удалить это задание?\",\r\n          buttons: [\r\n            { id: \"save\", type: \"default\", text: \"Да\" },\r\n            { id: \"delete\", type: \"destructive\", text: \"Нет\" },\r\n          ],\r\n        },\r\n        (buttonId) => {\r\n          if (buttonId === \"delete\" || buttonId === null) {\r\n          }\r\n          if (buttonId === \"save\") {\r\n            dispatch(deleteAd(e.id));\r\n          }\r\n        }\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n\r\n  \r\n\r\n  const buttonFunction = useCallback( (index) => {\r\n      setMyResponse({isOpen : true , id : index})\r\n  } , [setMyResponse]  )\r\n\r\n\r\n\r\n\r\n\r\n  const containerOne = useRef(null)\r\n  const containerTwo = useRef(null)\r\n  const pickerRef = useRef(null)\r\n  \r\n  useEffect( () => {\r\n    if (containerOne.current && containerTwo.current){\r\n      if (containerOne.current.offsetHeight < containerTwo.current.offsetHeight){\r\n        if (nowValue === \"freelancer\"){\r\n          pickerRef.current.style.overflowY = \"hidden\"\r\n          pickerRef.current.style.minHeight = String(containerOne.current.offsetHeight) + \"px\"\r\n          \r\n        }\r\n        else{\r\n          pickerRef.current.style.overflowY = \"hidden\"\r\n          pickerRef.current.style.minHeight = String(containerTwo.current.offsetHeight) + \"px\"\r\n        }\r\n      }\r\n      else{\r\n        if (nowValue === \"customer\"){\r\n            pickerRef.current.style.overflowY = \"hidden\"\r\n            pickerRef.current.style.minHeight = String(containerTwo.current.offsetHeight) + \"px\"\r\n          \r\n        }\r\n        else{\r\n            pickerRef.current.style.overflowY = \"hidden\"\r\n            pickerRef.current.style.minHeight = String(containerOne.current.offsetHeight) + \"px\"\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n\r\n    return () => {\r\n\r\n    }\r\n  }  , [nowValue, responsesArr, myAdsArray] )\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div\r\n    ref={pickerRef}\r\n      className=\"PickerContent\"\r\n      style={\r\n        nowValue === \"customer\"\r\n          ? { transform: \"translateX(-50%)\" }\r\n          : { transform: \"translateX(0%)\" }\r\n      }\r\n    >\r\n      \r\n\r\n      <PickerOne ref={containerOne} oneValue = {valueOne} nowValue = {nowValue}  responsesArr = {responsesArr} buttonFunction = {buttonFunction} />\r\n\r\n      <PickerTwo ref={containerTwo} valueTwo = {valueTwo} myAdsArray={myAdsArray} setSecondPage = {setSecondPage}  deleteFunction = {deleteFunction} />\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(PickerContent);\r\n","import React, {  memo, useEffect, useMemo} from \"react\";\r\n\r\nimport MyAdsBlock from \"./MyAdsBlock\";\r\nimport PickerContent from \"./PickerContent\";\r\nimport Top from \"../../../components/UI/Top/Top\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MyLoader from \"../../../components/UI/MyLoader/MyLoader\";\r\n\r\n// const popup = initPopup();\r\nconst MyAdOne = ({\r\n  myAdsArray,\r\n  setMenuActive,\r\n  setSecondPage,\r\n  nowValue,\r\n  setNowKey,\r\n  setOneValue,\r\n  setTwoValue,\r\n  valueTwo ,\r\n  valueOne,\r\n  details,\r\n  myResponse,\r\n  setMyResponse,\r\n  setDetails,\r\n  responsesArr\r\n  \r\n}) => {\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  let putStatus = useSelector((state) => state.information.putTaskStatus);\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (putStatus === \"error\") {\r\n      window.Telegram.WebApp.showAlert('ничего не сохранилось')\r\n    }\r\n  }, [putStatus]); // проверка на то, что все работает\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const GreyIntWidth = useMemo(() => {\r\n    return (document.documentElement.clientWidth - 36) / 2;\r\n  }, []);\r\n  const GreyWidth = useMemo(() => {\r\n    return GreyIntWidth.toString() + \"px\";\r\n  }, [GreyIntWidth]);\r\n\r\n\r\n\r\n  const status = useSelector(state => state.information.myOrderStatus)\r\n\r\n  const responseStatus = useSelector(state => state.responses.status)\r\n\r\n  return (\r\n    <>\r\n        {status === \"loading\" || responseStatus === \"pending\" ? \r\n      <MyLoader />\r\n      :\r\n    <div className=\"my-ad-one\">\r\n      <Top name={\"Мои задания\"} setMenuActive={setMenuActive} />\r\n\r\n\r\n      <MyAdsBlock setOneValue = {setOneValue}  setTwoValue = {setTwoValue} setNowKey={setNowKey} nowValue = {nowValue} greyIntWidth={GreyIntWidth} greyWidth={GreyWidth} deals={1} finishedDeals={\"0%\"} />\r\n          <PickerContent\r\n          responsesArr = {responsesArr}\r\n          details={details}\r\n          setDetails={setDetails}\r\n          myResponse={myResponse}\r\n          setMyResponse={setMyResponse}\r\n          nowValue={nowValue}\r\n          valueOne = {valueOne}\r\n          valueTwo = {valueTwo}\r\n            myAdsArray={myAdsArray}\r\n            setSecondPage = {setSecondPage}\r\n          />\r\n    </div>\r\n}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(MyAdOne);\r\n","import React, { lazy, Suspense, useEffect, useState } from 'react';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport BlockSpinner from '../../../components/UI/BlockSpinner/BlockSpinner';\r\nconst Reaction = lazy(() => import('./Reaction'))\r\nconst ReactionSuspense = ({openAboutReactionFunc, responce, setOpen}) => {\r\n\r\n    const { ref, inView } = useInView({\r\n        threshold: 0, // Порог видимости (от 0 до 1)\r\n      });\r\n    \r\n      const [isVisible, setVisible] = useState(false);\r\n      useEffect(() => {\r\n        if (inView) {\r\n          setVisible(true);\r\n        }\r\n      }, [setVisible, inView]);\r\n\r\n\r\n    return (\r\n        <div\r\n        style={!isVisible ? { minHeight: \"144px\" , width : \"100%\", position : \"relative\" } : {position : \"relative\"}}\r\n      >\r\n\r\n        {isVisible && <Suspense fallback={<BlockSpinner style = { responce.photos.length > 0 ? {minHeight : \"282px\"} :{minHeight : \"114px\"}} />} >\r\n\r\n            <Reaction\r\n            openAboutReactionFunc={openAboutReactionFunc}\r\n            responce={responce}\r\n            setOpen={setOpen}\r\n          />\r\n\r\n           </Suspense>\r\n        }\r\n\r\n\r\n        <div ref={ref} style={{\r\n                width : \"1px\",\r\n                height : \"1100px\",\r\n                position : \"absolute\",\r\n                top : \"-900px\",\r\n                opacity : \"0\",\r\n                zIndex : -1,\r\n                left : \"40px\"\r\n              \r\n            }} className=\"catch_block\"></div>\r\n            </div>\r\n\r\n        \r\n    );\r\n};\r\n\r\nexport default ReactionSuspense;","import React, { memo, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport ModalChoicer from \"../../../components/UI/ModalChoicer/ModalChoicer\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport MyLoader from \"../../../components/UI/MyLoader/MyLoader\";\r\nimport ReactionSuspense from \"./ReactionSuspense\";\r\nimport MyAnimation from \"./MyAnimation\";\r\n\r\nconst height = {height : 'calc(100vh - 330px)'}\r\nconst Responses = ({\r\n  setFilterBy,\r\n  responces,\r\n  values,\r\n  names,\r\n  openAboutReactionFunc,\r\n  setOpen,\r\n  getMore\r\n}) => {\r\n\r\n\r\n  const [page , setPage] = useState(2)\r\n  const orderStatus = useSelector(state => state.responses.responsesByAStatus)\r\n  const elementRef = useRef(null)\r\n\r\n\r\n  // const getMore = useCallback(async () => {\r\n  //   dispatch(fetchResponses([me,page]));\r\n  //   setPage(page + 1);\r\n  // }, [page, setPage, dispatch, me]);\r\n\r\n  const onIntersaction = useCallback(\r\n    (entries) => {\r\n\r\n      const firtEntry = entries[0];\r\n\r\n      if (firtEntry.isIntersecting && orderStatus !== \"all\") {\r\n        getMore(page, setPage);\r\n      }\r\n    },\r\n    [orderStatus, getMore, page, setPage]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(onIntersaction);\r\n    if (observer && elementRef.current) {\r\n      observer.observe(elementRef.current);\r\n    }\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [responces]);\r\n\r\n  return (\r\n    <>\r\n    <div className=\"responses__up-block\">\r\n      <p>Отклики</p>\r\n      <ModalChoicer\r\n        setValue={(value) => {\r\n          setFilterBy(value);\r\n        }}\r\n        className={\"MyAds-choicer\"}\r\n        values={values}\r\n        names={names}\r\n        defaultValue={values[0]}\r\n      />\r\n    </div>\r\n\r\n      {responces.length > 0 ?\r\n      <>\r\n      {responces.map((e, i) => {\r\n        return (\r\n          <ReactionSuspense\r\n            openAboutReactionFunc={openAboutReactionFunc}\r\n            responce={e}\r\n            setOpen={setOpen}\r\n          />\r\n        );\r\n      })}\r\n</>\r\n      :\r\n      <MyAnimation style = {height} text=\"Нет откликов на задание\" />\r\n    }\r\n\r\n\r\n      {orderStatus !== \"all\" &&  <MyLoader ref={elementRef}  style = {{ height : \"90px\" , marginLeft : \"-16px\"}} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(Responses);\r\n","import React, { memo } from \"react\";\r\nimport Responses from \"./Responses\";\r\n\r\nconst values = [\"all\", \"withCompletedTasks\", \"withCards\"];\r\nconst names = [\"Все\", \"С выполненными заданиями\", \"С примерами работ\"];\r\nconst ReactionBlock = ({\r\n  setFilterBy,\r\n  setOpen,\r\n  responces,\r\n  openAboutReactionFunc,\r\n  getMore\r\n}) => {\r\n  //451\r\n  return (\r\n    <div className=\"reactions__block\">\r\n       \r\n\r\n      <Responses\r\n        getMore = {getMore}\r\n        setFilterBy={setFilterBy}\r\n        values={values}\r\n        names={names}\r\n        responces={responces}\r\n        openAboutReactionFunc={openAboutReactionFunc}\r\n        setOpen={setOpen}\r\n      />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ReactionBlock);\r\n","import React from \"react\";\r\nimport MyLoader from \"../../../components/UI/MyLoader/MyLoader\";\r\nimport ReactionBlock from \"./ReactionBlock\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst AllReactions = ({\r\n  setFilterBy,\r\n  openAboutReactionFunc,\r\n  responces,\r\n  setOpen,\r\n  filteredArray,\r\n  getMore\r\n}) => {\r\n  const status = useSelector( state => state.responses.responsesByAStatus )\r\n  return (\r\n    <>\r\n      {status === \"pending\" ? (\r\n        <MyLoader\r\n          style={{\r\n            height: \"calc(100vh - 456px)\",\r\n            position: \"fixed\",\r\n            left: 0,\r\n          }}\r\n        />\r\n      ) : (\r\n        <ReactionBlock\r\n          getMore = {getMore}\r\n          setFilterBy={setFilterBy}\r\n          openAboutReactionFunc={openAboutReactionFunc}\r\n          responces={filteredArray}\r\n          setOpen={setOpen}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllReactions;\r\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { memo } from \"react\";\r\nimport Top from \"../../../components/UI/Top/Top\";\r\nimport { deleteAd } from \"../../../store/information\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AllReactions from \"./AllReactions\";\r\nimport Block from \"../../../components/First/Block\";\r\nimport { clearResponsesByA, fetchResponseByAdvertisement } from \"../../../store/responses\";\r\n\r\nconst AboutOne = ({\r\n  task,\r\n  setMenuActive,\r\n  setOpen,\r\n  setSecondPage,\r\n  setDetails,\r\n  openAboutReactionFunc,\r\n}) => {\r\n  const responces = useSelector( state => state.responses.responsesByA )\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(clearResponsesByA())\r\n    dispatch(fetchResponseByAdvertisement([task.id, task , 1]))\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const deleteFunction = useCallback(\r\n    (e) => {\r\n      window.Telegram.WebApp.showPopup(\r\n        {\r\n          title: \"Удалить?\",\r\n          message: \"Вы хотите удалить это задание?\",\r\n          buttons: [\r\n            { id: \"save\", type: \"default\", text: \"Да\" },\r\n            { id: \"delete\", type: \"destructive\", text: \"Нет\" },\r\n          ],\r\n        },\r\n        (buttonId) => {\r\n          if (buttonId === \"delete\" || buttonId === null) {\r\n          }\r\n          if (buttonId === \"save\") {\r\n            dispatch(deleteAd(e.id));\r\n            setSecondPage((value) => ({ ...value, isActive: false }));\r\n          }\r\n        }\r\n      );\r\n    },\r\n    [dispatch, setSecondPage]\r\n  );\r\n\r\n  const [filterBy, setFilterBy] = useState(\"all\");\r\n\r\n  const filteredArray = useMemo(() => {\r\n    if (responces !== null) {\r\n      if (filterBy === \"all\"){\r\n        return responces\r\n      }\r\n      if (filterBy === \"withCompletedTasks\"){\r\n        return [...responces.filter(e => e.user.completedAdvertisements.length > 0)]\r\n      }\r\n      if (filterBy === \"withCards\"){\r\n        return [...responces.filter(e => e.user.cardsNumber > 0)]\r\n      }\r\n    }\r\n    else{\r\n      return [];\r\n    }\r\n  }, [responces, filterBy]);\r\n\r\n  const deleteCallback = useCallback(() => {\r\n    deleteFunction(task);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const setDetailsCallback = useCallback(() => {\r\n    setDetails({\r\n      isActive: true,\r\n      task: task,\r\n    });\r\n    // eslint-disable-next-line\r\n  }, [task]);\r\n\r\n\r\n  const getMore = useCallback( (page, setPage) => {\r\n    dispatch(fetchResponseByAdvertisement([task.id , task , page]));\r\n    setPage(page + 1);\r\n  } , [dispatch, task] )\r\n\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n\r\n\r\n    <div className=\"aboutOne\" style={{}}>\r\n      <Top name={\"Отклики\"} setMenuActive={setMenuActive} />\r\n\r\n      {task ? (\r\n        <Block\r\n          deleteFunction={deleteCallback}\r\n          setDetailsActive={setDetailsCallback}\r\n          isResponce={task.status !== \"inProcess\" }\r\n          isButton={task.status !== \"inProcess\" }\r\n          className={\"FirstAdsBlock\"}\r\n        \r\n          {...task}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n\r\n        <AllReactions\r\n          getMore = {getMore}\r\n          filteredArray={filteredArray}\r\n          setFilterBy={setFilterBy}\r\n          openAboutReactionFunc={openAboutReactionFunc}\r\n          setOpen={setOpen}\r\n        />\r\n      \r\n\r\n    </div>\r\n    \r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(AboutOne);\r\n","import { useEffect } from \"react\";\r\nimport BackButton from \"../../constants/BackButton\";\r\nimport MainButton from \"../../constants/MainButton\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setStartTask } from \"../../store/information\";\r\nimport { setStartResponse } from \"../../store/responses\";\r\n\r\nexport const useButton = ({\r\n  setOpen,\r\n  setSecondPage,\r\n  navigate,\r\n  setOpenAboutReaction,\r\n\r\n  openAboutReaction,\r\n  isOpen,\r\n  \r\n  details,\r\n  secondPage,\r\n  save,\r\n  oneCards,\r\n  setOneCard,\r\n  detailsTwo,\r\n  setDetailsTwo,\r\n  myResponse,\r\n  setMyResponse,\r\n  lastAdsTwo,\r\n  setLastAdsTwo\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    function writeFucntion() {\r\n      window.Telegram.WebApp.showPopup(\r\n        {\r\n          title: \"Внимание\",\r\n          message: \"Перед выбором исполнителя\\n ознакомьтесь с FAQ Биржи.\",\r\n          buttons: [\r\n            { id: \"delete\", type: \"default\", text: \"Продолжить\" },\r\n            { id: \"save\", type: \"destructive\", text: \"Прочитать\" },\r\n          ],\r\n        },\r\n        (buttonId) => {\r\n          if (buttonId === \"delete\") {\r\n            window.Telegram.WebApp.showPopup(\r\n              {\r\n                title: \"Выбрать?\",\r\n                message: \"Вы уверены, что хотите выбрать\\n этого исполнителя?\",\r\n                buttons: [\r\n                  { id: \"save\", type: \"default\", text: \"Да\" },\r\n                  { id: \"delete\", type: \"destructive\", text: \"Нет\" },\r\n                ],\r\n              },\r\n              (buttonId) => {\r\n                if (buttonId === \"save\") {\r\n                  dispatch(setStartTask(secondPage.task.id));\r\n                  dispatch(setStartResponse(isOpen.responce.id));\r\n                  setOpen({ ...isOpen, isActive: false });\r\n                  setSecondPage({ ...secondPage, isActive: false });\r\n                } \r\n                if (buttonId === \"delete\" || buttonId === null){\r\n                  console.log(\"Он отказался\")\r\n                }\r\n                \r\n              }\r\n            );\r\n          }\r\n          if (buttonId === \"save\") {\r\n            window.Telegram.WebApp.openLink(\r\n              \"https://walletru.helpscoutdocs.com/\"\r\n            );\r\n          }\r\n          if (buttonId === null){\r\n            console.log(\"Он отказался\")\r\n          }\r\n        }\r\n      );\r\n    }\r\n    function goBack() {\r\n      if (oneCards.isOpen) {\r\n        setOneCard((value) => ({ ...value, isOpen: false }));\r\n      } else {\r\n        if (!openAboutReaction.isActive) {\r\n          if (!details.isActive) {\r\n            if (detailsTwo.isOpen) {\r\n              setDetailsTwo((value) => ({ ...value, isOpen: false }));\r\n            } else {\r\n              if (isOpen.isActive) {\r\n                setOpen({ ...isOpen, isActive: false });\r\n              } else {\r\n                if (secondPage.isActive) {\r\n                  setSecondPage({ ...secondPage, isActive: false });\r\n                } else {\r\n                  // if (history[history.length - 1] === '/AdCreating'){\r\n\r\n                  //   navigate();\r\n                  // }\r\n                  // else{\r\n                  //   navigate(-1)\r\n                  // }\r\n                  if (lastAdsTwo.isOpen){\r\n                    setLastAdsTwo((value) => ({...value , isOpen : false}) )\r\n                  }\r\n                  else{\r\n                    if (myResponse.isOpen) {\r\n                      setMyResponse((value) => ({ ...value, isOpen: false }));\r\n                    } else {\r\n                      navigate(\"/\");\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            save();\r\n          }\r\n        } else {\r\n          setOpenAboutReaction({ ...openAboutReaction, isActive: false });\r\n        }\r\n      }\r\n    }\r\n\r\n    BackButton.show();\r\n\r\n    if (isOpen.isActive) {\r\n      MainButton.show();\r\n      MainButton.setParams({\r\n        color: \"#2ea5ff\",\r\n        text_color: \"#ffffff\",\r\n      });\r\n      MainButton.setText(\"ВЫБРАТЬ\");\r\n      MainButton.onClick(writeFucntion);\r\n    } else {\r\n      MainButton.offClick(writeFucntion);\r\n      if (!myResponse.isOpen) {\r\n        MainButton.hide();\r\n      }\r\n    }\r\n    BackButton.onClick(goBack);\r\n    return () => {\r\n      BackButton.offClick(goBack);\r\n      // MainButton.offClick(writeFucntion);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, [\r\n    isOpen.isActive,\r\n    openAboutReaction.isActive,\r\n    details.isActive,\r\n    isOpen,\r\n    navigate,\r\n    save,\r\n    setOneCard,\r\n    oneCards.isOpen,\r\n    detailsTwo.isOpen,\r\n    setDetailsTwo,\r\n    myResponse.isOpen,\r\n    setMyResponse,\r\n    lastAdsTwo,\r\n    setLastAdsTwo\r\n  ]);\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ShowMyResponse_wrapper__TQThv\",\"response\":\"ShowMyResponse_response__uwmY+\",\"dateObject\":\"ShowMyResponse_dateObject__DLLCZ\"};","import React from \"react\";\r\n\r\n\r\nimport \"../../pages/MyAds/MyAds.css\";\r\nimport MyButton from \"../UI/MyButton/MyButton\";\r\nimport userPhoto from \"../../images/userPhoto/user.png\"\r\nconst MyReaction = ({\r\n  openAboutReactionFunc,\r\n  responce,\r\n  deleteFunction,\r\n  setLastAds,\r\n  agree = false,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"reaction\">\r\n        {responce.photos.length > 0 ? (\r\n          <div className=\"reactions__images\">\r\n            {responce.photos.map((e, i) => (\r\n              <img\r\n                \r\n                style={responce.photos.length === 1 ? { width: \"100%\" } : {}}\r\n                src={URL.createObjectURL(e)}\r\n                alt=\"\"\r\n                key={i}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <div\r\n          className=\"reaction__middle\"\r\n          style={{\r\n            marginBottom: \"18px\",\r\n          }}\r\n        >\r\n          <img\r\n            onClick={() => {\r\n              openAboutReactionFunc({ isActive: true, responce: responce });\r\n            }}\r\n            className=\"icon\"\r\n            style={{objectFit : \"cover\"}}\r\n            src={responce.user.photo.length > 0 ? responce.user.photo  : userPhoto}\r\n            alt=\"\"\r\n          />\r\n          <div\r\n            onClick={() => {\r\n              openAboutReactionFunc({ isActive: true, responce: responce });\r\n            }}\r\n            className=\"reaction__middle-midle\"\r\n          >\r\n            <p className=\"reaction__userName\">{responce.user.fl.length > 12 ? responce.user.fl.slice(0,12) + \"...\" : responce.user.fl }</p>\r\n            <div className=\"reaction__rates\">\r\n              {/* <img src={star} alt=\"\" /> */}\r\n              <div className=\"rates__text\">\r\n                {/* <p><span>4</span></p>\r\n                                  <p>◦</p>\r\n                                  <p>158 отзывов</p>\r\n                                  <p>◦</p> */}\r\n                <p>Отклик</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"right\">\r\n            <MyButton onClick = {() => {\r\n              setLastAds({\r\n                isOpen : true,\r\n                response : responce\r\n              })\r\n            }}>Подробнее</MyButton>\r\n            {responce.isWatched !== \"inProcess\"  && (\r\n              <div\r\n                onClick={() => {\r\n                  deleteFunction(responce.id);\r\n                }}\r\n                className=\"circle\"\r\n              >\r\n                <svg\r\n                  className=\"center\"\r\n                  width=\"25\"\r\n                  height=\"25\"\r\n                  viewBox=\"0 0 25 25\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M9.10742 19.8033H15.3744C16.4246 19.8033 17.0997 19.1691 17.1542 18.1189L17.6111 8.29909H18.3612C18.709 8.29909 18.975 8.02632 18.975 7.68535C18.975 7.34439 18.7022 7.08525 18.3612 7.08525H15.3335V6.06235C15.3335 5.01218 14.6652 4.39844 13.5263 4.39844H10.935C9.79618 4.39844 9.12788 5.01218 9.12788 6.06235V7.08525H6.11374C5.77277 7.08525 5.5 7.35121 5.5 7.68535C5.5 8.03314 5.77277 8.29909 6.11374 8.29909H6.86387L7.32076 18.1189C7.37531 19.1759 8.04361 19.8033 9.10742 19.8033ZM10.4031 6.12373C10.4031 5.77594 10.6486 5.5509 11.0237 5.5509H13.4377C13.8128 5.5509 14.0583 5.77594 14.0583 6.12373V7.08525H10.4031V6.12373ZM9.24381 18.5826C8.86875 18.5826 8.59597 18.303 8.57552 17.9007L8.11862 8.29909H16.3359L15.8927 17.9007C15.879 18.3099 15.6131 18.5826 15.2244 18.5826H9.24381ZM10.2258 17.4847C10.519 17.4847 10.7031 17.3006 10.6963 17.0278L10.4917 9.89481C10.4849 9.62204 10.294 9.44474 10.0144 9.44474C9.72798 9.44474 9.54386 9.62886 9.55068 9.90163L9.75526 17.0346C9.76208 17.3074 9.95302 17.4847 10.2258 17.4847ZM12.2375 17.4847C12.5239 17.4847 12.7217 17.3074 12.7217 17.0346V9.90163C12.7217 9.62886 12.5239 9.44474 12.2375 9.44474C11.9511 9.44474 11.7601 9.62886 11.7601 9.90163V17.0346C11.7601 17.3074 11.9511 17.4847 12.2375 17.4847ZM14.2492 17.4915C14.522 17.4915 14.7129 17.3074 14.7197 17.0346L14.9243 9.90163C14.9311 9.62886 14.747 9.45156 14.4606 9.45156C14.181 9.45156 13.9901 9.62886 13.9832 9.90163L13.7787 17.0346C13.7718 17.3006 13.956 17.4915 14.2492 17.4915Z\"\r\n                    fill=\"#F83D3D\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyReaction;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Customer_wrapper__9Q9Km\",\"userPhoto\":\"Customer_userPhoto__FCvwk\",\"two\":\"Customer_two__U5-Cj\",\"MyButton\":\"Customer_MyButton__2x-fc\"};","import React from 'react';\r\nimport cl from './Customer.module.css'\r\nimport MyButton from '../../UI/MyButton/MyButton';\r\nimport userPhoto from \"../../../images/userPhoto/user.png\"\r\nconst Customer = ({fl , photo, link, onImageClick}) => {\r\n    return (\r\n        <div className={cl.wrapper}>\r\n            <img style={{\r\n                objectFit : \"cover\"\r\n            }} onClick={onImageClick}  className={cl.userPhoto} src={photo.length > 0 ? photo : userPhoto} alt=\"\" />\r\n            <div onClick={onImageClick} className={cl.two}>\r\n                <p>{fl}</p>\r\n                <p>Заказчик</p>\r\n            </div>\r\n            <MyButton onClick = {() => {\r\n                      window.Telegram.WebApp.openTelegramLink(\r\n                        \"https://t.me/\" + link\r\n                      );\r\n              }}  style = {{marginLeft : \"auto\"}}>\r\n                НАПИСАТЬ\r\n            </MyButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Customer;","import React, { memo, useCallback, useEffect } from \"react\";\r\nimport cl from \"./ShowMyResponse.module.css\";\r\nimport Top from \"../../UI/Top/Top\";\r\nimport ResponseBlock from \"../ResponseBlock\";\r\nimport MyReaction from \"../MyReaction\";\r\nimport Customer from \"../Customer/Customer\";\r\nimport formatDate from \"../../../functions/makeDate\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport MyLoader from \"../../UI/MyLoader/MyLoader\";\r\nimport MainButton from \"../../../constants/MainButton\";\r\nimport axios from \"axios\";\r\nimport { changeMenuActive } from \"../../../store/menuSlice\";\r\nconst ShowMyResponse = ({\r\n  response = { advertisement: { user: {} } , id : 0 , user : {'fuck' : 'fuck'} },\r\n  openDetails,\r\n  index,\r\n  deleteFunction,\r\n  setLastAds,\r\n  openAboutReaction,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    function click(){\r\n      window.Telegram.WebApp.showPopup(\r\n        {\r\n          title: \"Выбрать?\",\r\n          message: \"Вы выполнили это задание?\",\r\n          buttons: [\r\n            { id: \"save\", type: \"default\", text: \"Да\" },\r\n            { id: \"delete\", type: \"destructive\", text: \"Нет\" },\r\n          ],\r\n        },\r\n        (buttonId) => {\r\n          if (buttonId === \"save\") {\r\n            clickHandler()\r\n          } \r\n          if (buttonId === \"delete\" || buttonId === null){\r\n            console.log(\"Он отказался\")\r\n          }\r\n          \r\n        }\r\n      );\r\n    }\r\n    async function clickHandler() {\r\n      try {\r\n        \r\n        await axios.get(\"https://back-birga.ywa.su/bot/notification\", {\r\n          params: {\r\n            executorId: String(response.user.id),\r\n            consumerId: String(response.advertisement.user.id),\r\n            responseId: String(response.id),\r\n            chatId: String(response.advertisement.user.id),\r\n            advertisementId: String(response.advertisement.id),\r\n          },\r\n        });\r\n        alert(\"chatId :  \" + response.advertisement.user.id)\r\n        \r\n        \r\n        window.Telegram.WebApp.showAlert(\"Мы выслали подтверждение заказчику.\\nПожалуйста, не нажимайте эту кнопку много раз.\\nПодтверждение точно было выслано. \")\r\n      } catch (e) {\r\n        window.Telegram.WebApp.showAlert(\"Извините, подверждение не удалось отправить заказчику. Обратитесь в поддержку.\");\r\n        window.Telegram.WebApp.showAlert(JSON.stringify(e))\r\n        console.log(e);\r\n      }\r\n    }\r\n    \r\n    if (response.isWatched === \"inProcess\") {\r\n      MainButton.show();\r\n      MainButton.setText(\"ВЫПОЛНИЛ\");\r\n      MainButton.onClick(click);\r\n    }\r\n    return () => {\r\n      MainButton.hide();\r\n      MainButton.offClick(click);\r\n    };\r\n  }, [\r\n    response.advertisement.id,\r\n    response.advertisement.user.id,\r\n    response.advertisement.user.chatId,\r\n    response.id,\r\n    response.isWatched,\r\n    response.user.id,\r\n  ]);\r\n\r\n  const setMenuActive = useCallback(\r\n    (arg) => {\r\n      dispatch(changeMenuActive(arg));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n\r\n  const onImageClick = useCallback( () => {\r\n    openAboutReaction({\r\n      isActive : true , \r\n      responce : {user : response.advertisement.user, createNumber : response.advertisement.createNumber}\r\n    })\r\n  } , [openAboutReaction, response.advertisement.user, response.advertisement.createNumber] )\r\n\r\n  return (\r\n    <>\r\n      {response.user.fuck ? (\r\n        <div className={cl.wrapper}>\r\n\r\n            <MyLoader style={{ width: \"100vw\", height: \"100vh\" }} />\r\n        </div>\r\n      ) : (\r\n        <div className={cl.wrapper}>\r\n          <Top setMenuActive={setMenuActive} name={\"Мой отклик\"} />\r\n          <ResponseBlock\r\n            isWatched={response.isWatched}\r\n            index={index}\r\n            func={openDetails}\r\n            className={cl.response}\r\n            buttonText={\"Подробнее\"}\r\n            {...response.advertisement}\r\n            task={response.advertisement}\r\n          />\r\n          <MyReaction\r\n            openAboutReactionFunc={openAboutReaction}\r\n            setLastAds={setLastAds}\r\n            deleteFunction={deleteFunction}\r\n            responce={response}\r\n          />\r\n          <Customer\r\n            onImageClick={onImageClick}\r\n            fl={response.advertisement.user.fl}\r\n            photo={response.advertisement.user.photo}\r\n            link={response.advertisement.user.link}\r\n          />\r\n          <p className={cl.dateObject}>\r\n            Создано {formatDate(new Date(response.advertisement.creationTime))}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(ShowMyResponse);\r\n","import React, { memo, useCallback, useEffect } from \"react\";\r\n\r\nimport Top from \"../../../components/UI/Top/Top\";\r\nimport Reaction from \"./Reaction\";\r\nimport TextAboutMe from \"../../../components/UI/AboutMeText/TextAboutMe\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeMenuActive } from \"../../../store/menuSlice\";\r\nimport formatDate from \"../../../functions/makeDate\";\r\nimport { postResponse } from \"../../../store/responses\";\r\nconst MyLastAds = ({\r\n\r\n  openAboutReactionFunc,\r\n\r\n  responce\r\n}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const setMenuActive = useCallback(\r\n    (arg) => {\r\n      dispatch(changeMenuActive(arg));\r\n    },\r\n    [dispatch]\r\n  );\r\n  useEffect( () => {\r\n    if (responce.isWatched !== \"watched\" && responce.isWatched !== \"inProcess\"){\r\n      dispatch(postResponse(responce.id))\r\n    }\r\n    // eslint-disable-next-line\r\n  } , [] )\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div\r\n      className={\"last-ads\"}\r\n    >\r\n      {/* <Top setMenuActive={setMenuActive} className={\"last-top\"} name={\"Отклики\"} /> */}\r\n\r\n      {/* <LastTop name = {name} photo = {photo} stage = {stage} openAboutReactionFunc={openAboutReactionFunc} /> */}\r\n\r\n      <Reaction writeButton = {false} blue = {true}   openAboutReactionFunc = {openAboutReactionFunc} put={true} responce={responce} />\r\n      \r\n      {/* <LastImages images = {images} /> */}\r\n      \r\n\r\n      {/* <LastSertificates /> */}\r\n      <TextAboutMe textareaClassName={\"new-textarea\"} style = {\r\n        {\r\n          marginTop : \"8px\"\r\n        }\r\n      } aboutU={responce.information} />\r\n\r\n      <p className=\"creationTime\">{ \"Создано \" + formatDate(new Date(responce.createdAt)) }</p>\r\n\r\n      \r\n{/* \r\n      <textarea className=\"last-textarea\" name=\"\" id=\"\" value={text} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(MyLastAds);\r\n","import React, { useCallback, useMemo, useState } from \"react\";\r\n\r\n// import myImage from '../../images/desccription.png'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { changeMenuActive } from \"../../store/menuSlice\";\r\nimport useListner from \"../../hooks/useListner\";\r\nimport \"./MyAds.css\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nimport LastAds from \"./components/LastAds\";\r\nimport MyAdOne from \"./components/MyAdOne\";\r\nimport AboutReaction from \"./components/AboutReaction\";\r\nimport AboutOne from \"./components/AboutOne\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport sortFiles from \"../../functions/sortFiles\";\r\nimport { putMyTask } from \"../../store/information\";\r\nimport AdCreatingOne from \"../AdCreatingOne/AdCreatingOne/AdCreatingOne\";\r\nimport { useButton } from \"../../hooks/MyAds/useButton\";\r\nimport { useSave } from \"../../hooks/MyAds/useSave\";\r\nimport ShowMyResponse from \"../../components/MyAds/ShowMyResponse/ShowMyResponse\";\r\nimport FirstDetails from \"../../components/First/FirstDetails/FirstDetails\";\r\nimport { deleteResponse } from \"../../store/responses\";\r\nimport MyLastAds from \"./components/MyLastAds\";\r\nimport CardPage from \"../CardPage/CardPage\";\r\n\r\n// const LastAds = lazy( () => import (\"./components/LastAds\") )\r\n// const MyAdOne = lazy( () => import (\"./components/MyAdOne\") )\r\n// const AboutOne = lazy( () => import (\"./components/AboutOne\") )\r\n// const AboutReaction = lazy( () => import (\"./components/AboutReaction\") )\r\n\r\n\r\nlet localAboutReaction;\r\nlet localSecondPage;\r\nlet localIsOpen;\r\nlet localDetails;\r\nlet detailsVar;\r\nconst defaultDate = new Date()\r\nconst MyAds = () => {\r\n\r\n\r\n\r\n  \r\n  const [valueOne , setValueOne] = useState(\"all\")\r\n\r\n  const [valueTwo , setValueTwo] = useState(\"all\")\r\n\r\n\r\n\r\n  const responsesArr = useSelector((state) => state.responses.responses);\r\n\r\n  const sortedResponses = useMemo( () => {\r\n    let copy = [...responsesArr]\r\n      return copy.sort((a,b) => {\r\n        let order = {\"inProcess\" : 1 , \"watched\" : 2 , \"\" : 3, \"completed\" : 4}\r\n        return order[a.isWatched] - order[b.isWatched]\r\n      })\r\n  } , [responsesArr] )\r\n\r\n  const filteredResponses = useMemo( () => {\r\n    switch (valueOne){\r\n      case \"all\":\r\n        return sortedResponses\r\n      case \"inProcess\":\r\n        return sortedResponses.filter(e => e.isWatched === \"inProcess\")\r\n      case \"watched\": \r\n        return sortedResponses.filter(e => e.isWatched === \"watched\")\r\n      case \"unWatched\":\r\n        return sortedResponses.filter(e => e.isWatched === \"\")\r\n      case \"completed\":\r\n        return sortedResponses.filter(e => e.isWatched === \"completed\")\r\n      default : \r\n        window.Telegram.WebApp.showAlert(\"Что - то пошло не так MyAds\")\r\n    }\r\n  } , [sortedResponses , valueOne]  )\r\n\r\n\r\n\r\n\r\n  const isMenuActive = useSelector((state) => state.menu.value);\r\n  const dispatch = useDispatch()\r\n\r\n  const setMenuActive = useCallback(\r\n    (arg) => {\r\n      dispatch(changeMenuActive(arg));\r\n    },\r\n    [dispatch]\r\n  );\r\n  \r\n\r\n\r\n  const [details, setDetails] = useState({\r\n    isActive: false,\r\n    task: {\r\n      id: \"\",\r\n      taskName: \"\",\r\n      taskDescription: \"\",\r\n      deadline: 1,\r\n      category: 1,\r\n      subCategory: 1,\r\n      price: 2000,\r\n      time: { start: \"\", end: \"\" },\r\n      photos: [],\r\n      photosNames: [],\r\n    },\r\n  });\r\n\r\n  detailsVar = details;\r\n\r\n\r\n  \r\n  \r\n  const myAdsArray = useSelector((state) => state.information.myAdsArray);\r\n\r\n  const filteredArray = useMemo( () => {\r\n    switch (valueTwo){\r\n      case \"all\":\r\n        return myAdsArray\r\n      case \"active\":\r\n        return myAdsArray.filter((e, i) => {\r\n          return e.status === \"active\"\r\n        })\r\n      case \"inProcess\":\r\n        return myAdsArray.filter(e => e.status === \"inProcess\")\r\n      case \"completed\":\r\n        return myAdsArray.filter(e => e.status === \"completed\")\r\n      default : \r\n        window.Telegram.WebApp.showAlert(\"Что - то пошло не так MyAds второй\")\r\n    }\r\n  } , [myAdsArray , valueTwo] )\r\n\r\n\r\n  \r\n  \r\n  const [secondPage, setSecondPage] = useState({\r\n    isActive : false,\r\n    task : myAdsArray[0],\r\n    index : 0\r\n  }\r\n  );\r\n  const [openAboutReaction, setOpenAboutReaction] = useState({\r\n    isActive : false,\r\n    responce : null\r\n  });\r\n\r\n  const [oneCards, setOneCard] = useState({\r\n    isOpen : false,\r\n    card : {}\r\n  })\r\n\r\n\r\n\r\n  function checkMistakes(changingTask) {\r\n    let taskName = false;\r\n    let timeError = false;\r\n    let descriptionError = false;\r\n    if (changingTask.taskName.length < 5) {\r\n      taskName = true;\r\n    }\r\n\r\n    if (changingTask.time.end.getTime() !== defaultDate.getTime()) {\r\n      if (changingTask.time.end < changingTask.time.start) {\r\n        timeError = true;\r\n        window.Telegram.WebApp.showAlert(\"У вас дата начала меньше даты завершения.\")\r\n      }\r\n    }\r\n    if (changingTask.taskDescription.length > 500){\r\n      descriptionError = true\r\n      window.Telegram.WebApp.showAlert(\"Описание больше 500 символов\")\r\n    }\r\n    let rezult = { taskName: taskName, timeError: timeError, descriptionError : descriptionError };\r\n\r\n\r\n    setMistakes(rezult);\r\n    return Object.values(rezult).every((value) => value === false);\r\n  } \r\n\r\n\r\n\r\n  const [isOpen, setOpen] = useState({ isActive: false, responce: {\r\n    information: \"\",\r\n    photos: [],\r\n    user: {\r\n        id: 0,\r\n        fl: \"\",\r\n        photo: \"\",\r\n        about: \"\",\r\n        stage: null,\r\n    }\r\n  } });\r\n\r\n  localAboutReaction = openAboutReaction;\r\n  localIsOpen = isOpen;\r\n  localSecondPage = secondPage;\r\n  localDetails = details\r\n\r\n\r\n\r\n\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const save = useSave({\r\n    detailsVar,\r\n    myAdsArray : filteredArray,\r\n    secondPage,\r\n    checkMistakes,\r\n    sortFiles,\r\n    dispatch,\r\n    putMyTask,\r\n    setDetails,\r\n    details\r\n  })// функция сохранения , а также модалка телеграма\r\n\r\n\r\n\r\n  const [myResponse, setMyResponse] = useState({\r\n    isOpen: false,\r\n    id: 0,\r\n  });\r\n  const [detailsTwo, setDetailsTwo] = useState({\r\n    isOpen : false,\r\n    id : 0\r\n  })\r\n\r\n  const openDetails = useCallback( (index) => {\r\n    setDetailsTwo({isOpen : true, id : index})\r\n  } , [] )\r\n\r\n\r\n  const [lastAdsTwo , setLastAdsTwo] = useState({\r\n    isOpen : false,\r\n    response : {},\r\n  })\r\n\r\n\r\n  useButton({\r\n    setMyResponse : setMyResponse,\r\n    myResponse : myResponse,\r\n    setDetailsTwo : setDetailsTwo,\r\n    detailsTwo : detailsTwo, \r\n    oneCards : oneCards,\r\n    localDetails : localDetails,\r\n    localAboutReaction : localAboutReaction,\r\n    localIsOpen : localIsOpen,\r\n    setOpen : setOpen,\r\n    setSecondPage : setSecondPage,\r\n    navigate : navigate,\r\n    setOpenAboutReaction : setOpenAboutReaction,\r\n    openAboutReaction : openAboutReaction,\r\n    isOpen : isOpen,\r\n    details : details,\r\n    secondPage : secondPage,\r\n    localSecondPage : localSecondPage,\r\n    setDetails : setDetails,\r\n    save : save,\r\n    setOneCard : setOneCard,\r\n    lastAdsTwo : lastAdsTwo,\r\n    setLastAdsTwo : setLastAdsTwo\r\n  })\r\n\r\n\r\n  function setDetailsActive(value) {\r\n    setDetails({ ...details, isActive: value });\r\n  }\r\n\r\n  useListner({\r\n    isMenuActive,\r\n    setMenuActive,\r\n    setDetailsActive,\r\n    isDetailsActive: details.isActive,\r\n  });\r\n\r\n\r\n  const [mistakes, setMistakes] = useState({\r\n    taskName: false,\r\n    timeError: false,\r\n  }); // контролер ошибок\r\n\r\n  \r\n\r\n\r\n\r\n  const setChangingTask = useCallback( (e) => {\r\n    setDetails( (value) =>  ({...value , task : e}))\r\n  }, [setDetails] ) \r\n  const [nowValue , setNowKey] = useState('customer')\r\n\r\n\r\n\r\n  // const sortedArray = useMemo( () => {\r\n  //   let copy = [...myAdsArray]\r\n\r\n  //     return copy.sort( (a , b) => {\r\n  //       let order = {\"inProcess\" : 0 , \"active\" : 1, \"completed\" : 2 }\r\n  //       return order[a.status] - order[b.status]\r\n  //     } )\r\n    \r\n  // } , [myAdsArray , nowValue] )\r\n\r\n\r\n\r\n//   useEffect( () => {\r\n//     document.documentElement.style.overflowY = 'scroll'\r\n//     document.documentElement.style.marginTop = '40px'\r\n//     setTimeout( () => {\r\n\r\n//       window.scrollTo({\r\n//         top: 40,\r\n//         behavior: \"smooth\",\r\n//       });\r\n//        document.documentElement.style.overflowY = 'hidden'\r\n//     }, 350 )\r\n\r\n// },[] )\r\n\r\n  \r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const deleteFunction = useCallback( (index) => {\r\n    window.Telegram.WebApp\r\n    .showPopup({\r\n      title: \"Удалить?\",\r\n      message: `Вы уверены, что хотите удалить этот отклик?`,\r\n      buttons: [\r\n        { id: \"save\", type: \"default\", text: \"Да\" },\r\n        { id: \"delete\", type: \"destructive\", text: \"Нет\" },\r\n      ],\r\n    } , (buttonId) => {\r\n\r\n      if (buttonId === \"delete\" || buttonId === null) {\r\n        \r\n      }\r\n      if (buttonId === \"save\") {\r\n        setMyResponse((value) => ({...value , isOpen : false}))\r\n        dispatch(deleteResponse(index))\r\n      }\r\n\r\n\r\n    } )\r\n\r\n} , [setMyResponse , dispatch])\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {myAdsArray[0] === null ? (\r\n        <></>\r\n      ) : (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ duration: 0.1 }}\r\n          className=\"MyAdsContainer\"\r\n        >\r\n\r\n\r\n\r\n          <MyAdOne\r\n          responsesArr = {filteredResponses}\r\n          myResponse = {myResponse}\r\n          setMyResponse = {setMyResponse}\r\n          details = {detailsTwo}\r\n            setOneValue = {setValueOne}\r\n            setTwoValue = {setValueTwo}\r\n            nowValue={nowValue}\r\n            valueTwo={valueTwo}\r\n            valueOne = {valueOne}\r\n            setNowKey={setNowKey}\r\n            myAdsArray={filteredArray}\r\n            setSecondPage={setSecondPage}\r\n            setDetails={setDetailsTwo}\r\n            setMenuActive={setMenuActive}\r\n          />\r\n\r\n\r\n\r\n\r\n\r\n        <CSSTransition classNames=\"details\" in={details.isActive} timeout={300}\r\n          mountOnEnter unmountOnExit>\r\n            <AdCreatingOne\r\n              mistakes={mistakes}\r\n              className=\"AdCreatingMy\"\r\n              taskInformation={details.task}\r\n              setTaskInformation={setChangingTask}\r\n              MyInformation={true}\r\n              isDetailsActive={details.isActive}\r\n            />\r\n          </CSSTransition>\r\n\r\n          <CSSTransition\r\n            classNames=\"aboutOne\"\r\n            in={secondPage.isActive}\r\n            timeout={400}\r\n            mountOnEnter\r\n            unmountOnExit\r\n          >\r\n            <AboutOne\r\n            setDetails={setDetails}\r\n              setSecondPage={setSecondPage}\r\n              setOpen={setOpen}\r\n              task={filteredArray[secondPage.index]}\r\n              setMenuActive={setMenuActive}\r\n              openAboutReactionFunc={setOpenAboutReaction}\r\n            />\r\n          </CSSTransition>\r\n\r\n\r\n\r\n          <CSSTransition\r\n            classNames=\"left-right\"\r\n            in={isOpen.isActive}\r\n            timeout={400}\r\n            mountOnEnter\r\n            unmountOnExit\r\n          >\r\n            <LastAds\r\n            responce = {isOpen.responce}\r\n              openAboutReactionFunc={setOpenAboutReaction}\r\n\r\n            />\r\n          </CSSTransition>\r\n\r\n\r\n          <CSSTransition\r\n            classNames=\"left-right\"\r\n            in={lastAdsTwo.isOpen}\r\n            timeout={400}\r\n            mountOnEnter\r\n            unmountOnExit\r\n          >\r\n            <MyLastAds\r\n            responce = {lastAdsTwo.response}\r\n              openAboutReactionFunc={setOpenAboutReaction}\r\n\r\n            />\r\n          </CSSTransition>\r\n\r\n\r\n\r\n          <CSSTransition\r\n            classNames=\"left-right\"\r\n            in={openAboutReaction.isActive}\r\n            timeout={400}\r\n            mountOnEnter\r\n            unmountOnExit\r\n          >\r\n            <AboutReaction setOneCard = {setOneCard} responce = {openAboutReaction.responce}   />\r\n          </CSSTransition>\r\n\r\n          <CSSTransition\r\n            classNames=\"left-right\"\r\n            in={oneCards.isOpen }\r\n            timeout={400}\r\n            mountOnEnter\r\n            unmountOnExit\r\n          >\r\n           <CardPage card={oneCards.card} />\r\n      </CSSTransition>\r\n\r\n\r\n          <CSSTransition\r\n        in={myResponse.isOpen}\r\n        timeout={400}\r\n        classNames={\"left-right\"}\r\n        unmountOnExit\r\n        mountOnEnter\r\n  \r\n      > \r\n        <ShowMyResponse openAboutReaction = {setOpenAboutReaction} setLastAds = {setLastAdsTwo} deleteFunction = {deleteFunction}  index={myResponse.id} openDetails = {openDetails} response={filteredResponses[myResponse.id]} />\r\n      </CSSTransition>\r\n\r\n\r\n      <CSSTransition\r\n            in={detailsTwo.isOpen}\r\n            timeout={400}\r\n            classNames=\"left-right\"\r\n            mountOnEnter\r\n            unmountOnExit\r\n          >\r\n            <FirstDetails\r\n              // className={}\r\n              orderInformation={filteredResponses[detailsTwo.id] ? filteredResponses[detailsTwo.id].advertisement : \"\"  }\r\n\r\n            />\r\n        </CSSTransition>\r\n\r\n\r\n\r\n\r\n        </motion.div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyAds;\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useSave = ({detailsVar, myAdsArray, secondPage, checkMistakes, sortFiles, dispatch, putMyTask, setDetails, details }) =>{\r\n    const save = useCallback( () => {\r\n        if (details.task !== myAdsArray[secondPage.index] ) {\r\n          window.Telegram.WebApp\r\n            .showPopup({\r\n              title: \"Сохранить?\",\r\n              message: \"Сохранить изменения перед выходом?\",\r\n              buttons: [\r\n                { id: \"save\", type: \"default\", text: \"Да\" },\r\n                { id: \"delete\", type: \"destructive\", text: \"Нет\" },\r\n              ],\r\n            } , (buttonId) => {\r\n    \r\n              if (buttonId === \"delete\" || buttonId === null) {\r\n                setDetails((value) => ({...value , isActive : false}))\r\n              }\r\n              if (buttonId === \"save\") {\r\n              if (checkMistakes(details.task)){\r\n              let myFormData = new FormData();\r\n              myFormData.append('title' , detailsVar.task.taskName)\r\n              myFormData.append('description' , detailsVar.task.taskDescription)\r\n              myFormData.append(\"deadline\" , 1)\r\n              myFormData.append(\"price\" , detailsVar.task.tonValue )\r\n              myFormData.append(\"startTime\" , detailsVar.task.time.start)\r\n              myFormData.append(\"endTime\" , detailsVar.task.time.end)\r\n    \r\n              let files = sortFiles(detailsVar.task.photosNames ,  detailsVar.task.photos)\r\n    \r\n    \r\n                for (let i = 0; i <  files.removedArr.length; i++){\r\n                  myFormData.append(`deleteFiles[${i}]` , files.removedArr[i])\r\n                }\r\n                for (let i = 0; i < files.addedArr.length ; i++){\r\n                  myFormData.append(`addFiles[${i}]` , files.addedArr[i] )\r\n                }\r\n    \r\n              dispatch(putMyTask([myFormData, detailsVar.task.id , detailsVar.task]))\r\n    \r\n              \r\n              setDetails((value) => ({...value , isActive : false}))\r\n              }\r\n    \r\n            }\r\n            } )\r\n            \r\n        } else {\r\n          setDetails((value) => ({...value , isActive : false}))\r\n        }\r\n         // eslint-disable-next-line\r\n      }, [details , dispatch , myAdsArray , setDetails , secondPage.index, checkMistakes, putMyTask, sortFiles  ] ) \r\n\r\n      return save\r\n}","import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport AboutTop from \"./AboutTop\";\r\nimport AboutInfo from \"./AboutInfo\";\r\nimport AboutMain from \"./AboutMain\";\r\nimport ExampleWorks from \"./ExampleWorks\";\r\nimport { memo } from \"react\";\r\nimport Top from \"../../../components/UI/Top/Top\";\r\nimport axios from \"axios\";\r\nimport MyLoader from \"../../../components/UI/MyLoader/MyLoader\";\r\nimport Stage from \"../../../components/UI/Stage/Stage\";\r\nimport Compact from \"../../../components/UI/Compact/Compact\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeMenuActive } from \"../../../store/menuSlice\";\r\nimport makeNewFile from \"../../../functions/newMakeFile\";\r\n\r\nconst AboutReaction = ({ responce , setOneCard,   ...props}) => {\r\n  const dispatch = useDispatch()\r\n  const setMenuActive = useCallback(\r\n    (arg) => {\r\n      dispatch(changeMenuActive(arg));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const [cards , setCards] = useState(null)\r\n  useEffect( () => {\r\n    async function getAllCards(){\r\n      let localCards = []\r\n      try{\r\n\r\n        let allCards = await axios.get(\"https://back-birga.ywa.su/card/findByUser\" , {\r\n            params : {\r\n                userId : responce.user.id\r\n            }\r\n        })\r\n\r\n        \r\n        for (let e of allCards.data){\r\n\r\n          let files = await makeNewFile(e.folder , e.photos)\r\n          localCards.push({\r\n              id : e.id,\r\n              title : e.title,\r\n              description : e.description,\r\n              behanceLink : e.behance,\r\n              dribbbleLink : e.dribble,\r\n              dropfileLink : e.dropFile,\r\n              photosNames : e.photos,\r\n              photos : files\r\n          })\r\n        }\r\n    \r\n      return localCards\r\n\r\n\r\n      }\r\n      catch(e){\r\n        window.Telegram.WebApp.showAlert(e)\r\n        console.log(e)\r\n      }\r\n\r\n\r\n\r\n    }\r\n    getAllCards().then((value) => {\r\n      setCards(value)\r\n    })\r\n    // eslint-disable-next-line\r\n  } , [])\r\n\r\n  const openFunc = useCallback( (par) => {\r\n    setOneCard({isOpen : true, card : par})\r\n  } , [setOneCard])\r\n\r\n\r\n  return (\r\n    <div className=\"aboutReaction\" {...props}>\r\n\r\n\r\n      <Top setMenuActive={setMenuActive} name={'Отклики'}/>\r\n\r\n      <AboutTop responce={responce} />\r\n\r\n      <AboutInfo responce={responce} />\r\n\r\n      <AboutMain aboutU = {responce.user.about}  />\r\n\r\n      <Compact className={\"stage-compact\"} title = {\"Стаж работы\"}>\r\n        <Stage numberB={responce.user.stage} />\r\n      </Compact>\r\n    \r\n\r\n      {cards === null ? <MyLoader/> :\r\n      <ExampleWorks openFunc={openFunc}   cards={cards}/>}\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default memo(AboutReaction);\r\n","function breakShare(){\r\n    window.Telegram.WebApp.showAlert(\"Мы пока не добавили возможность делиться откликами:(\")\r\n}\r\nexport default breakShare","import React, { memo } from \"react\";\r\n\r\nimport share from \"../../../images/icons/Share.svg\";\r\n\r\nimport \"./../MyAds.css\";\r\nimport FalseTie from \"../../../components/UI/FalseTie/FalseTie\";\r\nimport MyButton from \"../../../components/UI/MyButton/MyButton\";\r\nimport userPhoto from \"../../../images/userPhoto/user.png\"\r\nimport breakShare from \"../../../functions/breakShare\";\r\nconst Reaction = ({\r\n  blue = false,\r\n  setOpen,\r\n  put,\r\n  openAboutReactionFunc,\r\n  responce,\r\n  writeButton = true,\r\n  agree = false,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"reaction\"\r\n        style={\r\n          responce.isWatched === \"inProcess\" && writeButton\r\n            ? { border: \"1.67px solid #2ea5ff\" }\r\n            : {}\r\n        }\r\n      >\r\n        {responce.photos.length > 0 ? (\r\n          <div className=\"reactions__images\">\r\n            {responce.photos.map((e, i) => (\r\n              <img\r\n                style={responce.photos.length === 1 ? { width: \"100%\" } : {}}\r\n                src={URL.createObjectURL(e)}\r\n                alt=\"\"\r\n                key={i}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <div className=\"reaction__middle\">\r\n          <img\r\n            style={{objectFit : \"cover\"}}\r\n            onClick={() => {\r\n              openAboutReactionFunc({ isActive: true, responce: responce });\r\n            }}\r\n            className=\"icon\"\r\n            src={responce.user.photo.length > 0 ? responce.user.photo : userPhoto}\r\n            alt=\"\"\r\n          />\r\n          <div\r\n            onClick={() => {\r\n              openAboutReactionFunc({ isActive: true, responce: responce });\r\n            }}\r\n            className=\"reaction__middle-midle\"\r\n          >\r\n            <p\r\n              className=\"reaction__userName\"\r\n              style={\r\n                blue\r\n                  ? {\r\n                      textDecoration: \"underline\",\r\n                      color: \"#2ea5ff\",\r\n                      textUnderlineOffset: \"2px\",\r\n                    }\r\n                  : {}\r\n              }\r\n            >\r\n              {responce.user.fl}\r\n            </p>\r\n            <div className=\"reaction__rates\">\r\n              {/* <img src={star} alt=\"\" /> */}\r\n              <div className=\"rates__text\">\r\n                {/* <p><span>4</span></p>\r\n                                  <p>◦</p>\r\n                                  <p>158 отзывов</p>\r\n                                  <p>◦</p> */}\r\n                <p>\r\n                  Стаж{\" \"}\r\n                  {responce.user.stage === null ? \"0\" : responce.user.stage} лет\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          { (responce.isWatched === \"inProcess\" && writeButton) &&           <div className=\"blue-circle\">\r\n            <svg\r\n            className=\"commit-icon\"\r\n              width=\"16\"\r\n              height=\"15\"\r\n              viewBox=\"0 0 16 15\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M1.21484 8.14672L3.67722 10.4449L10.141 4.41211M14.4501 4.55575L7.98639 10.5886L7.2169 9.87039\"\r\n                stroke=\"#2EA5FF\"\r\n                stroke-width=\"1.33333\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n              />\r\n            </svg>\r\n          </div>}\r\n\r\n\r\n          {put ? (\r\n            <div className=\"right\">\r\n\r\n              <MyButton\r\n                style = {writeButton ? {} : {display : \"none\"}}\r\n                onClick={() => {\r\n                  window.Telegram.WebApp.openTelegramLink(\r\n                    \"https://t.me/\" + responce.user.link\r\n                  );\r\n                }}\r\n              >\r\n                Написать\r\n              </MyButton>\r\n\r\n              <FalseTie\r\n                agree={agree}\r\n                navigate={\"responce\"}\r\n                task={responce}\r\n                id={responce.id}\r\n              />\r\n              <div className=\"circle\" onClick={breakShare}  style={{opacity : 0.5}}>\r\n                <img className=\"shareImage\" src={share} alt=\"\" />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div onClick={breakShare}  className=\"circle\" style={responce.isWatched === \"inProcess\" && writeButton ? {marginLeft : \"8px\" , opacity : 0.5} : {opacity : 0.5}}>\r\n              <img  className=\"shareImage\" src={share} alt=\"\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n        {put ? (\r\n          <div\r\n            style={{\r\n              marginBottom: \"18px\",\r\n            }}\r\n          ></div>\r\n        ) : (\r\n          <div className=\"reactions__bottom\">\r\n            <button\r\n              onClick={() => {\r\n                setOpen({\r\n                  isActive: true,\r\n                  responce: responce,\r\n                });\r\n              }}\r\n              className=\"bottom__one\"\r\n            >\r\n              подробнее\r\n            </button>\r\n            <button\r\n              className=\"bottom__two\"\r\n              onClick={() => {\r\n                window.Telegram.WebApp.openTelegramLink(\r\n                  \"https://t.me/\" + responce.user.link\r\n                );\r\n              }}\r\n            >\r\n              Написать\r\n            </button>\r\n            {/* <svg style={{\r\n                stroke-width : \"1.67px\",\r\n                stroke : \"#2ea5ff\"\r\n              }} width=\"18\" height=\"21\" viewBox=\"0 0 18 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path d=\"M14.0978 1.80176C15.8171 1.80176 16.247 3.18964 16.247 3.88358V19.2571C16.247 20.2179 15.4204 19.8976 14.0978 19.2571L9.46867 17.1752C9.46867 17.1752 9.08075 17.0151 8.64205 17.0151C8.20335 17.0151 7.81542 17.1752 7.81542 17.1752L3.18633 19.2571C1.86373 19.8976 1.03711 20.2179 1.03711 19.2571V3.88358C1.03711 2.21812 2.46992 1.80176 3.18633 1.80176H14.0978Z\" stroke=\"#2EA5FF\" stroke-width=\"1.66667\" />\r\n</svg> */}\r\n            <FalseTie\r\n              agree={agree}\r\n              navigate={\"responce\"}\r\n              task={responce}\r\n              id={responce.id}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(Reaction);\r\n"],"names":["ResponseBlock","_ref","className","taskName","time","tonValue","photos","isMyAds","setSlideActive","func","buttonText","task","id","index","isWatched","category","props","tonConstant","useSelector","state","ton","value","watchingValue","useMemo","style","color","_jsx","_Fragment","children","undefined","_jsxs","join","length","map","e","i","onClick","isActive","src","URL","createObjectURL","width","alt","marginTop","Pallete","ShareIcon","window","Telegram","WebApp","openTelegramLink","String","formatDate","start","SmallDimond","Number","toFixed","toLocaleString","FalseTie","navigate","MyButton","memo","link","text","Link","to","cl","AdCreactingFunction","plus","Select","React","ref","slots","root","CustomButton","listbox","AnimatedListbox","popup","Popup","BaseSelect","ModalChoicer","values","names","setValue","defaultValue","onChange","arguments","Option","blue","grey","ownerState","other","StyledButton","type","height","viewBox","fill","xmlns","d","styled","shouldForwardProp","_ref2","theme","Listbox","_ref3","concat","popupContext","PopupContext","Error","verticalPlacement","placement","split","CssTransition","enterClassName","exitClassName","BaseOption","_ref4","optionClasses","selected","highlighted","disabled","_templateObject","_taggedTemplateLiteral","photosNames","files","removedArr","addedArr","fileName","find","name","push","file","includes","LastAds","openAboutReactionFunc","responce","dispatch","useDispatch","setMenuActive","useCallback","arg","changeMenuActive","useEffect","postResponse","Top","Reaction","put","TextAboutMe","textareaClassName","aboutU","information","Date","createdAt","keys","MyAdsBlock","nowValue","setNowKey","greyWidth","greyIntWidth","setOneValue","setTwoValue","me","telegramUserInfo","responses","advertisements","myAdsArray","finishedDeals","rezult","deals","completedTasks","slice","isNaN","display","FullPicker","GreyIntWidth","GreyWidth","nowKey","options","animationData","sad","loop","justifyContent","marginLeft","marginRight","View","useLottie","Block","lazy","setSecondPage","inView","useInView","threshold","isVisible","setVisible","useState","minHeight","position","top","opacity","left","zIndex","Suspense","fallback","BlockSpinner","AdsContainer","deleteFunction","page","setPage","orderStatus","myOrderStatus","elementRef","useRef","getMore","async","fetchMyOrders","onIntersaction","entries","isIntersecting","observer","IntersectionObserver","current","observe","disconnect","SuspenseBlock","MyLoader","PickerTwo","forwardRef","valueTwo","status","AdCreateFunc","MyAnimation","advertisement","responsesArr","buttonFunction","fetchResponses","ResponseSuspense","oneValue","interRef","responsesStatus","showAlert","alignSelf","MyResponses","PickerContent","valueOne","myResponse","setMyResponse","details","setDetails","showPopup","title","message","buttons","buttonId","deleteAd","isOpen","containerOne","containerTwo","pickerRef","offsetHeight","overflowY","transform","PickerOne","MyAdOne","putStatus","putTaskStatus","document","documentElement","clientWidth","toString","responseStatus","setOpen","Responses","setFilterBy","responces","responsesByAStatus","ReactionSuspense","ReactionBlock","filteredArray","AboutOne","responsesByA","clearResponsesByA","fetchResponseByAdvertisement","filterBy","filter","user","completedAdvertisements","cardsNumber","deleteCallback","setDetailsCallback","setDetailsActive","isResponce","isButton","AllReactions","setLastAds","agree","marginBottom","objectFit","photo","userPhoto","fl","response","onImageClick","ShowMyResponse","openDetails","openAboutReaction","click","axios","get","params","executorId","consumerId","responseId","chatId","advertisementId","alert","JSON","stringify","console","log","clickHandler","MainButton","show","setText","hide","offClick","createNumber","fuck","MyReaction","Customer","creationTime","MyLastAds","writeButton","localAboutReaction","localSecondPage","localIsOpen","localDetails","detailsVar","defaultDate","MyAds","setValueOne","setValueTwo","sortedResponses","sort","a","b","order","filteredResponses","isMenuActive","menu","taskDescription","deadline","subCategory","price","end","secondPage","setOpenAboutReaction","oneCards","setOneCard","card","about","stage","useNavigate","save","checkMistakes","sortFiles","putMyTask","myFormData","FormData","append","useSave","changingTask","timeError","descriptionError","getTime","setMistakes","Object","every","detailsTwo","setDetailsTwo","lastAdsTwo","setLastAdsTwo","writeFucntion","setStartTask","setStartResponse","openLink","goBack","BackButton","setParams","text_color","useButton","useListner","isDetailsActive","mistakes","setChangingTask","deleteResponse","motion","div","initial","animate","transition","duration","CSSTransition","classNames","in","timeout","mountOnEnter","unmountOnExit","AdCreatingOne","taskInformation","setTaskInformation","MyInformation","AboutReaction","CardPage","FirstDetails","orderInformation","cards","setCards","localCards","allCards","userId","data","makeNewFile","folder","description","behanceLink","behance","dribbbleLink","dribble","dropfileLink","dropFile","getAllCards","then","openFunc","par","AboutTop","AboutInfo","AboutMain","Compact","Stage","numberB","ExampleWorks","border","textDecoration","textUnderlineOffset","stroke","breakShare","share"],"sourceRoot":""}