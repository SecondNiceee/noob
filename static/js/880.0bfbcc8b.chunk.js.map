{"version":3,"file":"static/js/880.0bfbcc8b.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback)\n            callback(event, info);\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n                if (i === unresolvedKeyframes.length - 1) {\n                    this.finalKeyframe = keyframe;\n                }\n            }\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return this.resolveNoneKeyframes();\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.teardown();\n        const { onStop } = this.options;\n        onStop && onStop();\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.1.3\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const props = visualElement.getProps();\n            const appearId = props[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, getClosestProjectingNode(this.parent));\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.1.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.1.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionContext","createContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","schedule","microtask","cancel","cancelMicrotask","createRenderBatcher","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","mount","unmount","current","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","MotionConfigContext","layoutId","useLayoutId","isStatic","isBrowser","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","reducedMotion","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","useIsomorphicLayoutEffect","postRender","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","jsxs","Provider","value","children","jsx","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","min","max","number","parse","parseFloat","alpha","scale","default","sanitize","Math","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","frame","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","callback","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","now","clearTime","time","frameData","isProcessing","MotionGlobalConfig","useManualTiming","timestamp","performance","newTime","isZeroValueString","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","invariant","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","push","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","clear","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","add","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","p","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","cancelFrame","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","teardown","onStop","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","remove","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}